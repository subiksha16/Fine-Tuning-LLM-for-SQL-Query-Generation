{"prompt": "Which activity has the most faculty members participating in? Find the activity name.", "completion": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Show the id and star rating of each hotel, ordered by its price from low to high.", "completion": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC"}
{"prompt": "What is the name of the organization that was formed most recently?", "completion": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1"}
{"prompt": "How many faculty members does each building have? List the result with the name of the building.", "completion": "SELECT building ,  count(*) FROM Faculty GROUP BY building"}
{"prompt": "What is the shop name corresponding to the shop that opened in the most recent year?", "completion": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1"}
{"prompt": "Find the name of the person who has friends with age above 40 and under age 30?", "completion": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"}
{"prompt": "What is the count of the songs that last approximately 4 minutes?", "completion": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\""}
{"prompt": "Find the last names of all the teachers that teach GELL TAMI.", "completion": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"GELL\" AND T1.lastname  =  \"TAMI\""}
{"prompt": "Which service id and type has the least number of participants?", "completion": "SELECT T3.service_id ,  T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID   =  T3.Event_ID JOIN services AS T4 ON T3.service_id  =  T4.service_id GROUP BY T3.service_id ORDER BY count(*) ASC LIMIT 1"}
{"prompt": "What is maximum group equity shareholding of the companies?", "completion": "SELECT max(group_equity_shareholding) FROM operate_company"}
{"prompt": "Find the names of all the products whose stock number starts with \"2\".", "completion": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\""}
{"prompt": "Please show the most common publication date.", "completion": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "Find the name of services that have been used for more than 2 times in first notification of loss.", "completion": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2"}
{"prompt": "Find the total population of the districts where the area is bigger than the average city area.", "completion": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)"}
{"prompt": "What are the average prices of hotels grouped by their pet policy.", "completion": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn"}
{"prompt": "Return the structure description of the document that has been accessed the fewest number of times.", "completion": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Find the level name of the catalog with the lowest price (in USD).", "completion": "SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1"}
{"prompt": "Give the color description that is least common across products.", "completion": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1"}
{"prompt": "What is the project detail for the project with document \"King Book\"?", "completion": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\""}
{"prompt": "What are the names of enzymes that include the string 'ALA'?", "completion": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\""}
{"prompt": "Return the apartment numbers of the apartments with type code \"Flat\".", "completion": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\""}
{"prompt": "What is the count of different game types?", "completion": "SELECT count(DISTINCT gtype) FROM Video_games"}
{"prompt": "Find the names of customers who have no policies associated.", "completion": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id"}
{"prompt": "Find the number of students in each major.", "completion": "SELECT count(*) ,  major FROM student GROUP BY major"}
{"prompt": "Find all the vocal types.", "completion": "SELECT DISTINCT TYPE FROM vocals"}
{"prompt": "What is the total number of airlines?", "completion": "SELECT count(*) FROM AIRLINES"}
{"prompt": "What are the names of all tryout participants who are from the largest college?", "completion": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)"}
{"prompt": "What distinct accelerator names are compatible with the browswers that have market share higher than 15?", "completion": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share  >  15;"}
{"prompt": "Which of the countries has the most car makers? List the country name.", "completion": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;"}
{"prompt": "Which types of policy are chosen by more than 2 customers? Give me the policy type codes.", "completion": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2"}
{"prompt": "What is the total share of transactions?", "completion": "SELECT sum(share_count) FROM TRANSACTIONS"}
{"prompt": "List the document type code, document name, and document description for the document with name 'Noel CV' or name 'King Book'.", "completion": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'"}
{"prompt": "How many courses that do not have prerequisite?", "completion": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"}
{"prompt": "How many products are in the 'Spices' category and have a typical price of over 1000?", "completion": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000"}
{"prompt": "What are the names of customers who have taken both Mortgage and Auto loans?", "completion": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto'"}
{"prompt": "Who is the author of the paper titled \"Binders Unbound\"? Give me the last name.", "completion": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\""}
{"prompt": "Find the average and maximum age for each type of pet.", "completion": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype"}
{"prompt": "Count the total number of roles listed.", "completion": "SELECT count(*) FROM ROLES"}
{"prompt": "What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?", "completion": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'"}
{"prompt": "Find the entry name of the catalog with the highest price (in USD).", "completion": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"}
{"prompt": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.", "completion": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID"}
{"prompt": "What are the name, id and the corresponding number of visits for each  tourist attraction?", "completion": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID"}
{"prompt": "What are the ids of stations that have latitude above 37.4 and never had bike availability below 7?", "completion": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7"}
{"prompt": "Which teachers teach the student named EVELINA BROMLEY? Give me the first and last name  of the teachers.", "completion": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\""}
{"prompt": "Which skill is used in fixing the most number of faults? List the skill id and description.", "completion": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Find all the forenames of distinct drivers who won in position 1 as driver standing and had more than 20 points?", "completion": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20"}
{"prompt": "Which customer made the most orders? Find the customer name.", "completion": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "How many team franchises are active, with active value 'Y'?", "completion": "SELECT count(*) FROM team_franchise WHERE active = 'Y';"}
{"prompt": "List the writers who have written more than one book.", "completion": "SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1"}
{"prompt": "What are the name, phone number and email address of the customer who made the largest number of orders?", "completion": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Find the distinct winery of wines having price between 50 and 100.", "completion": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100"}
{"prompt": "Which address has both members younger than 30 and members older than 40?", "completion": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40"}
{"prompt": "What are the number of different course codes?", "completion": "SELECT count(DISTINCT crs_code) FROM CLASS"}
{"prompt": "Show the names of high schoolers who have at least 3 friends.", "completion": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3"}
{"prompt": "Count the number of customers.", "completion": "SELECT count(*) FROM customers"}
{"prompt": "What region is Kabul in?", "completion": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\""}
{"prompt": "Show the season, the player, and the name of the country that player belongs to.", "completion": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country"}
{"prompt": "Which vocal type did the musician with first name \"Solveig\" played in the song with title \"A Bar in Amsterdam\"?", "completion": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\""}
{"prompt": "What are the numbers of constructors for different nationalities?", "completion": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality"}
{"prompt": "Find the number of routes whose destination airports are in Canada.", "completion": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'"}
{"prompt": "What is the id of the store that has the most items in inventory?", "completion": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Show the company name with the number of gas station.", "completion": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id"}
{"prompt": "What are the names of all students who took a class and the corresponding course descriptions?", "completion": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code"}
{"prompt": "How many dogs have an age below the average?", "completion": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )"}
{"prompt": "Find the average grade point of student whose last name is Smith.", "completion": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"Smith\""}
{"prompt": "Which submission received the highest score in acceptance result. Show me the result.", "completion": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1"}
{"prompt": "List the order id, customer id for orders in Cancelled status, ordered by their order dates.", "completion": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date"}
{"prompt": "How many customers did not have any event?", "completion": "SELECT count(*) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )"}
{"prompt": "What is the minimum, maximum, and average market value for every company?", "completion": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company"}
{"prompt": "List the id of students who attended some courses?", "completion": "SELECT student_id FROM student_course_attendance"}
{"prompt": "What are all the makers and models?", "completion": "SELECT Maker ,  Model FROM MODEL_LIST;"}
{"prompt": "Show the location codes with at least 3 documents.", "completion": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3"}
{"prompt": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.", "completion": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'"}
{"prompt": "How many tasks are there?", "completion": "SELECT count(*) FROM Tasks"}
{"prompt": "How many people live in countries that do not speak English?", "completion": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")"}
{"prompt": "What are the names of the reviewers who have rated a movie more than 3 stars before?", "completion": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3"}
{"prompt": "For each journal_committee, find the editor name and the journal theme.", "completion": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID"}
{"prompt": "What are the names of staff who have been assigned multiple jobs?", "completion": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1"}
{"prompt": "Find the id of the song that lasts the longest.", "completion": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1"}
{"prompt": "Find the entry names of the catalog with the attribute that have the most entries.", "completion": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)"}
{"prompt": "Find the number of employees hired in each shop; show the shop name as well.", "completion": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"}
{"prompt": "What are the names of scientists who are not working on the project with the most hours?", "completion": "SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"}
{"prompt": "What is the average and total capacity for all dorms who are of gender X?", "completion": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'"}
{"prompt": "How many different position for players are listed?", "completion": "SELECT count(DISTINCT POSITION) FROM player"}
{"prompt": "Select the name of the products with a price less than or equal to $200.", "completion": "SELECT name FROM products WHERE price  <=  200"}
{"prompt": "What is the list of program origins ordered alphabetically?", "completion": "SELECT origin FROM program ORDER BY origin"}
{"prompt": "What is the country in which the customer Carole Bernhard lived?", "completion": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\""}
{"prompt": "What are the employee ids of employees who report to Payam, and what are their salaries?", "completion": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )"}
{"prompt": "Return all the committees that have delegates from Democratic party.", "completion": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\""}
{"prompt": "How many players are from each country?", "completion": "SELECT count(*) ,  country_code FROM players GROUP BY country_code"}
{"prompt": "What is the name, type, and flag of the ship that was built in the most recent year?", "completion": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1"}
{"prompt": "Which problems are reported by the staff with last name \"Bosco\"? Show the ids of the problems.", "completion": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\""}
{"prompt": "find the names of loser and winner who played in the match with greatest number of minutes.", "completion": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1"}
{"prompt": "Find the number of routes operated by American Airlines.", "completion": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'"}
{"prompt": "List every album ordered by album title in ascending order.", "completion": "SELECT title FROM albums ORDER BY title;"}
{"prompt": "What is the id of the most recent order?", "completion": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1"}
{"prompt": "What are the names and salaries of instructors who advise students in the Math department?", "completion": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'"}
{"prompt": "List all every engineer's first name, last name, details and coresponding skill description.", "completion": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id"}
{"prompt": "Give me the first name and last name for all the female members of the club \"Bootup Baltimore\".", "completion": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\""}
{"prompt": "What is the total balance of savings accounts not belonging to someone with the name Brown?", "completion": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown'"}
{"prompt": "What is the total amount of products purchased before 2018-03-17 07:13:53?", "completion": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\""}
{"prompt": "What are the names of studios that have produced films with both Nicholas Meyer and Walter Hill?", "completion": "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\""}
{"prompt": "What is the name of the breed with the most dogs?", "completion": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Find the id and address of the shops whose score is below the average score.", "completion": "SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)"}
{"prompt": "How many distinct cities does the employees live in?", "completion": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE"}
{"prompt": "What are the names of scientists who have not been assigned a project?", "completion": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"}
{"prompt": "Show countries where a singer above age 40 and a singer below 30 are from.", "completion": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30"}
{"prompt": "How many debit cards do we have?", "completion": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\""}
{"prompt": "What is the name of each continent and how many car makers are there in each one?", "completion": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;"}
{"prompt": "Which delegates are from counties with population smaller than 100000?", "completion": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"}
{"prompt": "For each main industry, what is the total number of companies for the industry with the highest total market value?", "completion": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1"}
{"prompt": "What are the airline names and abbreviations for airlines in the USA?", "completion": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\""}
{"prompt": "Find the three most expensive procedures.", "completion": "SELECT name FROM procedures ORDER BY cost LIMIT 3"}
{"prompt": "How many tracks are in each genre?", "completion": "SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;"}
{"prompt": "What is the first name and last name employee helps the customer with first name Leonie?", "completion": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\""}
{"prompt": "What are the id, role, and first name of the professionals who have performed two or more treatments?", "completion": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"}
{"prompt": "Describe the section h.", "completion": "SELECT section_description FROM Sections WHERE section_name  =  'h'"}
{"prompt": "How many hours do the students spend studying in each department?", "completion": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code"}
{"prompt": "What are the names of all the clubs starting with the oldest?", "completion": "SELECT name FROM club ORDER BY Start_year ASC"}
{"prompt": "Find the names of the regions which were affected by the storm that killed the greatest number of people.", "completion": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1"}
{"prompt": "Whose permanent address is different from his or her current address? List his or her first name.", "completion": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id"}
{"prompt": "Show the number of all customers without an account.", "completion": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"}
{"prompt": "What is the total time for all lessons taught by Janessa Sawayn?", "completion": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"prompt": "What is the continent name which Anguilla belongs to?", "completion": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\""}
{"prompt": "Find the number of products for each manufacturer, showing the name of each company.", "completion": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"}
{"prompt": "What are the highest and lowest prices of products, grouped by and alphabetically ordered by product type?", "completion": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code"}
{"prompt": "What is the last name of the youngest student?", "completion": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)"}
{"prompt": "List the name of the aircraft that has been named winning aircraft the most number of times.", "completion": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "What are the average, maximum and total revenues of all companies?", "completion": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers"}
{"prompt": "Return the phone number of the customer who filed the complaint that was raised most recently.", "completion": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1"}
{"prompt": "What is the name of the high schooler who has the greatest number of friends?", "completion": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Show all student IDs who have at least two allergies.", "completion": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2"}
{"prompt": "Show the id and name of the aircraft with the maximum distance.", "completion": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1"}
{"prompt": "Find the number of students for each department.", "completion": "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code"}
{"prompt": "What are the names of the singers who are not French citizens?", "completion": "SELECT Name FROM singer WHERE Citizenship != \"France\""}
{"prompt": "How many customers does Steve Johnson support?", "completion": "SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"Steve\" AND T1.last_name = \"Johnson\";"}
{"prompt": "Show the ids of the faculty who don't participate in any activity.", "completion": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in"}
{"prompt": "How many dorms have amenities?", "completion": "SELECT count(DISTINCT dormid) FROM has_amenity"}
{"prompt": "Show the names and grades of each high schooler.", "completion": "SELECT name ,  grade FROM Highschooler"}
{"prompt": "What are the average ages for male and female students?", "completion": "SELECT avg(age) ,  sex FROM Student GROUP BY sex"}
{"prompt": "What is the average fee for a CSU campus in the year of 1996?", "completion": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996"}
{"prompt": "What are the phone numbers of all customers and suppliers.", "completion": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers"}
{"prompt": "Find the names of the artists who are from Bangladesh and have never received rating higher than 7.", "completion": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7"}
{"prompt": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "completion": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1"}
{"prompt": "How many distinct governors are there?", "completion": "SELECT count(DISTINCT Governor) FROM party"}
{"prompt": "What are the countries that have at least two perpetrators?", "completion": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country HAVING COUNT(*)  >=  2"}
{"prompt": "Show the ids for projects with at least 2 documents.", "completion": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2"}
{"prompt": "Find the number of classes in each department.", "completion": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code"}
{"prompt": "What is the location of the perpetrator with the largest kills.", "completion": "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1"}
{"prompt": "What are the phone numbers and email addresses of all customers who have an outstanding balance of more than 2000?", "completion": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;"}
{"prompt": "What is the last name of the student who got a grade A in the class with code 10018.", "completion": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018"}
{"prompt": "Find the average age and experience working length of journalists working on different role type.", "completion": "SELECT avg(t1.age) ,  avg(Years_working) ,  t2.work_type FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id  =  t2.journalist_id GROUP BY t2.work_type"}
{"prompt": "What is the status code with the least number of customers?", "completion": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;"}
{"prompt": "what is the name and age of the youngest winning pilot?", "completion": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1"}
{"prompt": "Find the first names that are used for professionals or owners but are not used as dog names.", "completion": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs"}
{"prompt": "List all pilot names in ascending alphabetical order.", "completion": "SELECT Name FROM pilot ORDER BY Name ASC"}
{"prompt": "List all information about customer master index, and sort them by details in descending order.", "completion": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC"}
{"prompt": "Show the minimum, average, and maximum age of all students.", "completion": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student"}
{"prompt": "How much money did Lucas Mancini spend?", "completion": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"}
{"prompt": "How many products are there?", "completion": "SELECT count(*) FROM Products"}
{"prompt": "find the total percentage share of all channels owned by CCTV.", "completion": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'"}
{"prompt": "Show the colleges that have both authors with submission score larger than 90 and authors with submission score smaller than 80.", "completion": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80"}
{"prompt": "How many players are there?", "completion": "SELECT count(*) FROM players"}
{"prompt": "What are the full names and ages for all female students whose sex is F?", "completion": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'"}
{"prompt": "How many main stream browsers whose market share is at least 5 exist?", "completion": "SELECT count(*) FROM browser WHERE market_share  >=  5"}
{"prompt": "What are the names of all the customers?", "completion": "SELECT customer_name FROM customers"}
{"prompt": "On what dates did the student with family name \"Zieme\" and personal name \"Bernie\" enroll in and complete the courses?", "completion": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\""}
{"prompt": "List name of all tracks in Balls to the Wall.", "completion": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";"}
{"prompt": "Which customer made the smallest amount of claim in one claim? Return the customer details.", "completion": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)"}
{"prompt": "Show all customer ids and the number of cards owned by each customer.", "completion": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id"}
{"prompt": "Find the names of goods that receive a rating of 10.", "completion": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  =  10"}
{"prompt": "display the department ID, full name (first and last name), salary for those employees who is highest salary in every department.", "completion": "SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id"}
{"prompt": "What are the appelations for wines produced after 2008 but not in the Central Coast area?", "completion": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\""}
{"prompt": "Find name of the services that has never been used.", "completion": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id"}
{"prompt": "What are the names of all the physicians who took appointments.", "completion": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"}
{"prompt": "How old is the youngest person for each job?", "completion": "SELECT min(age) ,  job FROM Person GROUP BY job"}
{"prompt": "Which part fault requires the most number of skills to fix? List part id and name.", "completion": "SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Report the name of all campuses in Los Angeles county.", "completion": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""}
{"prompt": "What are the state and country of all the cities that have post codes starting with 4.\\", "completion": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\""}
{"prompt": "What are the names of cities in Europe for which English is not the official language?", "completion": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')"}
{"prompt": "What is the average and largest salary of all employees?", "completion": "SELECT avg(salary) ,  max(salary) FROM Employee"}
{"prompt": "Find the name of dorms which have TV Lounge but no Study Room as amenity.", "completion": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'"}
{"prompt": "What is the ship id and name that caused most total injuries?", "completion": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the name, independence year, and surface area of the country with the smallest population?", "completion": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1"}
{"prompt": "List all location codes and location names.", "completion": "SELECT location_code ,  location_name FROM Ref_locations"}
{"prompt": "Find the capacity and gender type of the dorm whose name has substring \u2018Donor\u2019.", "completion": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'"}
{"prompt": "Give the airport code and airport name corresonding to the city Anthony.", "completion": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\""}
{"prompt": "For each state, find the total account balance of customers whose credit score is above 100.", "completion": "SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state"}
{"prompt": "How many camera lenses are not used in taking any photos?", "completion": "SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )"}
{"prompt": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.", "completion": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1"}
{"prompt": "Who has friends that are younger than the average age?", "completion": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)"}
{"prompt": "Give the names of wrestlers and their elimination moves.", "completion": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID"}
{"prompt": "What are the names of all songs that are approximately 4 minutes long or are in English?", "completion": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"english\""}
{"prompt": "What is the average age for a male in each job?", "completion": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job"}
{"prompt": "What is the average number of employees of the departments whose rank is between 10 and 15?", "completion": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15"}
{"prompt": "List the course name of courses sorted by credits.", "completion": "SELECT CName FROM COURSE ORDER BY Credits"}
{"prompt": "Which papers were written by authors from the institution \"Google\"?", "completion": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\""}
{"prompt": "List the id of students who registered course statistics in the order of registration date.", "completion": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date"}
{"prompt": "Give me the claim date, settlement date for all the claims whose claimed amount is larger than the average.", "completion": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )"}
{"prompt": "Who has written a paper that has the word \"Functional\" in its title? Return the first names of the authors.", "completion": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\""}
{"prompt": "What is the total horses record for each farm, sorted ascending?", "completion": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC"}
{"prompt": "What is the average distance and average price for flights from Los Angeles.", "completion": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\""}
{"prompt": "Please show the different statuses of cities and the average population of cities with each status.", "completion": "SELECT Status ,  avg(Population) FROM city GROUP BY Status"}
{"prompt": "What are the Package Options of the TV Channels whose series names are Sky Radio?", "completion": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";"}
{"prompt": "What are the reigns and days held of all wrestlers?", "completion": "SELECT Reign ,  Days_held FROM wrestler"}
{"prompt": "Return the names of products in the category 'Spices'.", "completion": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\""}
{"prompt": "What is the average age for each city and what are those cities?", "completion": "SELECT avg(age) ,  city_code FROM student GROUP BY city_code"}
{"prompt": "What are the names of instructors who earn more than at least one instructor from the Biology department?", "completion": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')"}
{"prompt": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.", "completion": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "What are the names of all games played by Linda Smith?", "completion": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\""}
{"prompt": "Count the number of regions.", "completion": "SELECT count(*) FROM region"}
{"prompt": "Return the issue date of the volume that has spent the fewest weeks on top.", "completion": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1"}
{"prompt": "Count the total number of students.", "completion": "SELECT count(*) FROM student"}
{"prompt": "How many artists do we have?", "completion": "SELECT count(*) FROM artist"}
{"prompt": "List the last name of the owner owning the youngest dog.", "completion": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )"}
{"prompt": "Show all party names and the number of members in each party.", "completion": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"}
{"prompt": "What is the average price for flights from Los Angeles to Honolulu.", "completion": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""}
{"prompt": "What are the mascots for schools with enrollments above the average?", "completion": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)"}
{"prompt": "What are the titles of films that are either longer than 100 minutes or rated PG other than those that cost more than 200 to replace?", "completion": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200"}
{"prompt": "What is the degree summary name that has the most number of students enrolled?", "completion": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Find how many school locations have the word 'NY'.", "completion": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\""}
{"prompt": "Show all document names using templates with template type code BK.", "completion": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\""}
{"prompt": "Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25.", "completion": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""}
{"prompt": "What are the names of the singers and number of concerts for each person?", "completion": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id"}
{"prompt": "Show all advisors who have at least two students.", "completion": "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2"}
{"prompt": "Show the prices of the products named \"Dining\" or \"Trading Policy\".", "completion": "SELECT Product_Price FROM Products WHERE Product_Name  =  \"Dining\" OR Product_Name  =  \"Trading Policy\""}
{"prompt": "Which students participate in both Canoeing and Kayaking as their activities? Tell me their student ids.", "completion": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'"}
{"prompt": "What are the last names and ids of all drivers who had 11 pit stops and participated in more than 5 races?", "completion": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"}
{"prompt": "How many employees do we have?", "completion": "SELECT count(*) FROM Employee"}
{"prompt": "What is the average rating for each movie that has never been reviewed by Brittany Harris?", "completion": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\") GROUP BY mID"}
{"prompt": "How many customers are there?", "completion": "SELECT sum(no_of_customers) FROM bank"}
{"prompt": "Find the description of the claim status \"Open\".", "completion": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\""}
{"prompt": "What are the invoice numbers created before 1989-09-03 or after 2007-12-25?", "completion": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""}
{"prompt": "What are the price ranges of five star hotels?", "completion": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\""}
{"prompt": "Give me a list of all the service names sorted alphabetically.", "completion": "SELECT service_name FROM services ORDER BY service_name"}
{"prompt": "Return the descriptions and names of the courses that have more than two students enrolled in.", "completion": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2"}
{"prompt": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .", "completion": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )"}
{"prompt": "What are the details for the project whose research has been published?", "completion": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'"}
{"prompt": "how many ships are there?", "completion": "SELECT count(*) FROM ship"}
{"prompt": "Return the maximum number of points for climbers from the United Kingdom.", "completion": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\""}
{"prompt": "Give the average number of cities within markets that had a low market estimation larger than 10000?", "completion": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000"}
{"prompt": "Show the company name and the main industry for all companies whose headquarters are not from USA.", "completion": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'"}
{"prompt": "What are the distinct positions of the players from a country whose capital is Dublin?", "completion": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\""}
{"prompt": "List the names of editors in ascending order of age.", "completion": "SELECT Name FROM editor ORDER BY Age ASC"}
{"prompt": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards?", "completion": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\""}
{"prompt": "Show names of climbers and the names of mountains they climb.", "completion": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"}
{"prompt": "How many total credits are offered by each department?", "completion": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name"}
{"prompt": "Find the names of stadiums whose capacity is smaller than the average capacity.", "completion": "SELECT name FROM stadium WHERE capacity  <  (SELECT avg(capacity) FROM stadium)"}
{"prompt": "What is minimum age for different job title?", "completion": "SELECT min(age) ,  job FROM Person GROUP BY job"}
{"prompt": "Find courses that ran in Fall 2009 but not in Spring 2010.", "completion": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"prompt": "Show the average share count of transactions each each investor, ordered by average share count.", "completion": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)"}
{"prompt": "What are the GDP and population of the city that already served as a host more than once?", "completion": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1"}
{"prompt": "What are the names of musicals who have no actors?", "completion": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)"}
{"prompt": "List the project details of the projects which did not hire any staff for a researcher role.", "completion": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )"}
{"prompt": "Find the city and name of bank branches that provide business loans.", "completion": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'"}
{"prompt": "Find the names of the swimmers who have no record.", "completion": "SELECT name FROM swimmer WHERE id NOT IN (SELECT swimmer_id FROM record)"}
{"prompt": "For each semester, what is the name and id of the one with the most students registered?", "completion": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the names of conductors whose nationalities are not \"USA\"?", "completion": "SELECT Name FROM conductor WHERE Nationality != 'USA'"}
{"prompt": "Show id, first and last names for all customers with at least two cards.", "completion": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"}
{"prompt": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to.", "completion": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'"}
{"prompt": "Find the appelations that produce wines after the year of 2008 but not in Central Coast area.", "completion": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\""}
{"prompt": "Show different citizenship of singers and the number of singers of each citizenship.", "completion": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship"}
{"prompt": "Which staff members who reported problems from the product \"rem\" but not \"aut\"? Give me their first and last names.", "completion": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\""}
{"prompt": "Show the years and the official names of the host cities of competitions.", "completion": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID"}
{"prompt": "How many statements do we have?", "completion": "SELECT count(*) FROM Statements"}
{"prompt": "What are the names and release years for all the songs of the youngest singer?", "completion": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1"}
{"prompt": "What are the details of all sales and purchases?", "completion": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases"}
{"prompt": "what are the names of the ships ordered by ascending tonnage?", "completion": "SELECT Name FROM ship ORDER BY Tonnage ASC"}
{"prompt": "What are the first names and last names of students with address in Wisconsin state?", "completion": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Wisconsin\""}
{"prompt": "What are names of countries with the top 3 largest population?", "completion": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3"}
{"prompt": "Find the the customer details and id for the customers who had more than one policy.", "completion": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1"}
{"prompt": "Show the name, street address, and number of floors for all buildings ordered by the number of floors.", "completion": "SELECT name ,  street_address ,  floors FROM building ORDER BY floors"}
{"prompt": "Which position is most popular among players in the tryout?", "completion": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the denominations used by both schools founded before 1890 and schools founded  after 1900?", "completion": "SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900"}
{"prompt": "What are the names of companies whose headquarters are not \"USA\"?", "completion": "SELECT name FROM Companies WHERE Headquarters != 'USA'"}
{"prompt": "What are the mission codes, fates, and names of the ships involved?", "completion": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID"}
{"prompt": "What are the first and last names of all customers with between 1000 and 3000 dollars outstanding?", "completion": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;"}
{"prompt": "Which city does staff with first name as Janessa and last name as Sawayn live?", "completion": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"prompt": "How many products have prices of at least 180?", "completion": "SELECT count(*) FROM products WHERE price >= 180"}
{"prompt": "Who is the composer of track Fast As a Shark?", "completion": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";"}
{"prompt": "Find the names of all physicians and their primary affiliated departments' names.", "completion": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1"}
{"prompt": "Show all distinct lot details.", "completion": "SELECT DISTINCT lot_details FROM LOTS"}
{"prompt": "Show all church names except for those that had a wedding in year 2015.", "completion": "SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id WHERE T2.year  =  2015"}
{"prompt": "Which song has the most vocals?", "completion": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "find all dependent names who have a spouse relation with some employee.", "completion": "SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse'"}
{"prompt": "Give me the number of faculty members who participate in an activity", "completion": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in"}
{"prompt": "How many songs have 4 minute duration?", "completion": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\""}
{"prompt": "Return the investors who have invested in two or more entrepreneurs.", "completion": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2"}
{"prompt": "List the position of players and the average number of points of players of each position.", "completion": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION"}
{"prompt": "What is the earliest date of a transcript release, and what details can you tell me?", "completion": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1"}
{"prompt": "What are the title and maximum price of each film?", "completion": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id"}
{"prompt": "Find the names of all distinct wines that have appellations in North Coast area.", "completion": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"North Coast\""}
{"prompt": "What are the descriptions of all the project outcomes?", "completion": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code"}
{"prompt": "Show all student IDs with more than total 10 hours per week on all sports played.", "completion": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10"}
{"prompt": "Return the famous release date for the oldest artist.", "completion": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1"}
{"prompt": "Give the codes of document types that have more than 2 corresponding documents.", "completion": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2"}
{"prompt": "Return the type of transaction with the highest total amount.", "completion": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1"}
{"prompt": "Wat is the tax source system code and master customer id of the taxes related to each parking fine id?", "completion": "SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id"}
{"prompt": "What are the names of artists who have not released any albums?", "completion": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId"}
{"prompt": "List all the characteristic names and data types of product \"cumin\".", "completion": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\""}
{"prompt": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000.", "completion": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000"}
{"prompt": "Show all video game types.", "completion": "SELECT DISTINCT gtype FROM Video_games"}
{"prompt": "What are the names and dates of races, and the names of the tracks where they are held?", "completion": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id"}
{"prompt": "Show the account name and other account detail for all accounts by the customer with first name Meaghan and last name Keeling.", "completion": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\""}
{"prompt": "Which template type code is used by most number of documents?", "completion": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What is the name of the ship with the largest tonnage?", "completion": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1"}
{"prompt": "What are the distinct address type codes for all customer addresses?", "completion": "SELECT DISTINCT address_type_code FROM customer_addresses"}
{"prompt": "What is the description for the section named h?", "completion": "SELECT section_description FROM Sections WHERE section_name  =  'h'"}
{"prompt": "Find the distinct Advisor of students who have treasurer votes in the spring election cycle.", "completion": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\""}
{"prompt": "How many activities do we have?", "completion": "SELECT count(*) FROM Activity"}
{"prompt": "Show white percentages of cities and the crime rates of counties they are in.", "completion": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"}
{"prompt": "What are the codes of countries with more than 50 players?", "completion": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50"}
{"prompt": "What are the names, locations, and years of opening for tracks with seating higher than average?", "completion": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)"}
{"prompt": "Find the number of different cities that employees live in.", "completion": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE"}
{"prompt": "Find the average checking balance.", "completion": "SELECT avg(balance) FROM checking"}
{"prompt": "What is the zip code the county named \"Howard\" is located in?", "completion": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\""}
{"prompt": "What are the players who played for Columbus Crew, and how many years did each play for?", "completion": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""}
{"prompt": "What is the sport with the most scholarship students?", "completion": "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Please show the nominee who has been nominated the greatest number of times.", "completion": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "List total amount of  invoice from Chicago, IL.", "completion": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";"}
{"prompt": "What are the login names and family names of course author and tutors?", "completion": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors"}
{"prompt": "List the names of 5 users followed by the largest number of other users.", "completion": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5"}
{"prompt": "What are the ids of all songs that have higher resolution of the average resolution in the modern genre?", "completion": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")"}
{"prompt": "How many different templates do all document use?", "completion": "SELECT count(DISTINCT template_id) FROM Documents"}
{"prompt": "What is the name and opening year for the branch that registered the most members in 2016?", "completion": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "On what day was the order with invoice number 10 placed?", "completion": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10"}
{"prompt": "Find the student ID and personal name of the student with at least two enrollments.", "completion": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2"}
{"prompt": "What instrument did the musician with last name \"Heilo\" use in the song \"Le Pop\"?", "completion": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Le Pop\""}
{"prompt": "List the names of people that are not perpetrators.", "completion": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)"}
{"prompt": "What are all the policy types of the customer named \"Dayana Robel\"?", "completion": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\""}
{"prompt": "What are the full names of faculties with sex M and who live in building NEB?", "completion": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\""}
{"prompt": "Which student are enrolled in at least two courses? Give me the student ID and personal name.", "completion": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2"}
{"prompt": "What are the names of wines made from red grapes and with prices above 50?", "completion": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50"}
{"prompt": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "completion": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'"}
{"prompt": "On average how large is the population of the counties?", "completion": "SELECT avg(Population) FROM county"}
{"prompt": "What are the names of the instructors in the Comp. Sci. department who earn more than 80000?", "completion": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000"}
{"prompt": "How many products are there for each manufacturer?", "completion": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"}
{"prompt": "What are the distinct districts for elections?", "completion": "SELECT DISTINCT District FROM election"}
{"prompt": "Count the number of distinct delegates who are from counties with population above 50000.", "completion": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000"}
{"prompt": "What is the name of the song that was released in the most recent year?", "completion": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1"}
{"prompt": "What are the songs in volumes associated with the artist aged 32 or older?", "completion": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32"}
{"prompt": "Return the publisher that has published the most books.", "completion": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the names of documents that have both one of the three most common types and one of three most common structures?", "completion": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3"}
{"prompt": "What are the names of all aircrafts that John Williams have certificates to be able to fly?", "completion": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\""}
{"prompt": "Find the name of customers who have both saving and checking account types.", "completion": "SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'"}
{"prompt": "Find the names of the buildings in \"on-hold\" status, and sort them in ascending order of building stories.", "completion": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC"}
{"prompt": "display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a \u2019T\u2019.", "completion": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )"}
{"prompt": "Find the name and gender of the candidate who got the highest support rate.", "completion": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1"}
{"prompt": "Please show the results of music festivals and the number of music festivals that have had each, ordered by this count.", "completion": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"}
{"prompt": "Find the name of each user and number of tweets tweeted by each of them.", "completion": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid"}
{"prompt": "what are the names and classes of the ships that do not have any captain yet?", "completion": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)"}
{"prompt": "What are the names of the customers who have made two or less orders?", "completion": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2"}
{"prompt": "Find the number of the products that have their color described as \"red\" and have a characteristic named \"slow\".", "completion": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"slow\""}
{"prompt": "What are the birth dates of employees living in Edmonton?", "completion": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\""}
{"prompt": "What are the ids and names of all start stations that were the beginning of at least 200 trips?", "completion": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200"}
{"prompt": "What are the first names and office locations for all professors sorted alphabetically by first name?", "completion": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname"}
{"prompt": "Show all member names and registered branch names sorted by register year.", "completion": "SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year"}
{"prompt": "Show the names of the three most recent festivals.", "completion": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3"}
{"prompt": "Which complaint status has more than 3 records on file?", "completion": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"}
{"prompt": "Show the people that have been comptroller the most times and the corresponding number of times.", "completion": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "List the first and last name of students who are not living in the city with code HKG, and sorted the results by their ages.", "completion": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age"}
{"prompt": "How many employees are there all together?", "completion": "SELECT count(*) FROM employee"}
{"prompt": "What are the name and description for role code \"MG\"?", "completion": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\""}
{"prompt": "What is the zip code of the address where the teacher with first name \"Lyla\" lives?", "completion": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  \"Lyla\""}
{"prompt": "Show all majors.", "completion": "SELECT DISTINCT Major FROM Student"}
{"prompt": "Return the most common full name among all actors.", "completion": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Which patient is undergoing the most recent treatment?", "completion": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1"}
{"prompt": "Show the addresses of the buildings that have apartments with more than 2 bathrooms.", "completion": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2"}
{"prompt": "Which students are unaffected by allergies?", "completion": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy"}
{"prompt": "Find the last and first name of students who are playing Football or Lacrosse.", "completion": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\""}
{"prompt": "What are the names of the directors who made exactly one movie?", "completion": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1"}
{"prompt": "What is the average, minimum, maximum, and total transaction amount?", "completion": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions"}
{"prompt": "Count the number of all the calendar items.", "completion": "SELECT count(*) FROM Ref_calendar"}
{"prompt": "List the name and count of each product in all orders.", "completion": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"}
{"prompt": "What is the race class with most number of races.", "completion": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the names and salaries of instructors who advises students in the History department?", "completion": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'"}
{"prompt": "Count the number of appelations in Napa County.", "completion": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\""}
{"prompt": "List the venues of debates in ascending order of the number of audience.", "completion": "SELECT Venue FROM debate ORDER BY Num_of_Audience ASC"}
{"prompt": "How many students are taught by teacher TARRING LEIA?", "completion": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"TARRING\" AND T2.lastname  =  \"LEIA\""}
{"prompt": "What is the count of enzymes without any interactions?", "completion": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );"}
{"prompt": "Show the number of document types.", "completion": "SELECT count(*) FROM Ref_document_types"}
{"prompt": "What are the names of the tracks that are Rock or Jazz songs?", "completion": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\" OR T1.name = \"Jazz\""}
{"prompt": "Show the ministers and the time they took and left office, listed by the time they left office.", "completion": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office"}
{"prompt": "Which store owns most items?", "completion": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Return the category code and typical price of 'cumin'.", "completion": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\""}
{"prompt": "What are the first names of every student who has a cat or dog as a pet?", "completion": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'"}
{"prompt": "Find the number of students in total.", "completion": "SELECT count(*) FROM STUDENT"}
{"prompt": "What are the names of products with 'white' as their color description?", "completion": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\""}
{"prompt": "What are the names of customers with credit score less than the average credit score across customers?", "completion": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)"}
{"prompt": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?", "completion": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1"}
{"prompt": "How many rooms does each block floor have?", "completion": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor"}
{"prompt": "What are the names of people in ascending order of weight?", "completion": "SELECT Name FROM People ORDER BY Weight ASC"}
{"prompt": "What is the name of the ship that is commanded by the youngest captain?", "completion": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1"}
{"prompt": "Return the average age across all gymnasts.", "completion": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"}
{"prompt": "What are the names of the courses that have exactly 1 student enrollment?", "completion": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1"}
{"prompt": "What is the average price for wines not produced in Sonoma county?", "completion": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')"}
{"prompt": "Show the names of people that are on affirmative side of debates with number of audience bigger than 200.", "completion": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200"}
{"prompt": "What are the main indstries and total market value for each industry?", "completion": "SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry"}
{"prompt": "How many parks are there in the state of NY?", "completion": "SELECT count(*) FROM park WHERE state  =  'NY';"}
{"prompt": "Show the first name and last name for the customer with account name 900.", "completion": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\""}
{"prompt": "Find the number of settlements each claim corresponds to. Show the number together with the claim id.", "completion": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id"}
{"prompt": "What are the names and years of the movies that has the top 3 highest rating star?", "completion": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"}
{"prompt": "What is the name of department where has the largest number of professors with a Ph.D. degree?", "completion": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "How many different types of sports do we offer?", "completion": "SELECT count(DISTINCT sportname) FROM Sportsinfo"}
{"prompt": "Count the number of markets that have a number of cities lower than 300.", "completion": "SELECT count(*) FROM market WHERE Number_cities  <  300"}
{"prompt": "Which club has the most members majoring in \"600\"?", "completion": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \"600\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the names of documents that do not have any sections?", "completion": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)"}
{"prompt": "What is the maximum and minimum share for the TV series?", "completion": "SELECT max(SHARE) , min(SHARE) FROM TV_series;"}
{"prompt": "What are the names of tracks that contain the the word you in them?", "completion": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'"}
{"prompt": "Find the employee id for all employees who earn more than the average salary.", "completion": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)"}
{"prompt": "List the id and type of each thing, and the details of the organization that owns it.", "completion": "SELECT T1.thing_id ,  T1.type_of_Thing_Code ,  T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id  =  T2.organization_id"}
{"prompt": "What are the names of actors ordered descending by the year in which their musical was awarded?", "completion": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC"}
{"prompt": "What are the names of people who are not from Russia?", "completion": "SELECT Name FROM people WHERE Nationality != \"Russia\""}
{"prompt": "Show names of companies and that of employees in descending order of number of years working for that employee.", "completion": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working"}
{"prompt": "What are the product ids and color descriptions for products with two or more characteristics?", "completion": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2"}
{"prompt": "How many bookings do we have?", "completion": "SELECT count(*) FROM BOOKINGS"}
{"prompt": "What is the number of artists for each gender?", "completion": "SELECT count(*) ,  gender FROM artist GROUP BY gender"}
{"prompt": "show the lowest low temperature and highest wind speed in miles per hour.", "completion": "SELECT min(low_temperature) ,  max(wind_speed_mph) FROM weekly_weather"}
{"prompt": "What are the types of vocals that the musician with the first name \"Solveig\" played in the song \"A Bar in Amsterdam\"?", "completion": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\""}
{"prompt": "how many people are there whose weight is higher than 85 for each gender?", "completion": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex"}
{"prompt": "Which professionals have done at least two treatments? List the professional's id, role, and first name.", "completion": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"}
{"prompt": "Show all locations and the number of gas stations in each location ordered by the count.", "completion": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)"}
{"prompt": "Which marketing region has the most drama workshop groups? Give me the region code.", "completion": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "How many orders does Luca Mancini have in his invoices?", "completion": "SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"}
{"prompt": "What is the description of document status code 'working'?", "completion": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = \"working\";"}
{"prompt": "What is the list of school locations sorted in ascending order of school enrollment?", "completion": "SELECT LOCATION FROM school ORDER BY Enrollment ASC"}
{"prompt": "Show the number of audience in year 2008 or 2010.", "completion": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010"}
{"prompt": "Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID.", "completion": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0"}
{"prompt": "Are the customers holding coupons with amount 500 bad or good?", "completion": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500"}
{"prompt": "What are the names of parties that have both delegates on \"Appropriations\" committee and", "completion": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\""}
{"prompt": "What are the names for tracks without a race in class 'GT'.", "completion": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'"}
{"prompt": "What is the latitude, longitude, and city of the station from which the trip with smallest duration started?", "completion": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1"}
{"prompt": "What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is 163?", "completion": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )"}
{"prompt": "What country does Roberto Almeida live?", "completion": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";"}
{"prompt": "For all directors who have directed more than one movie, what movies have they directed and what are their names?", "completion": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title"}
{"prompt": "How many donors have endowment for school named \"Glenn\"?", "completion": "SELECT count(DISTINCT T1.donator_name) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  \"Glenn\""}
{"prompt": "What are the delegate and committee information for each election record?", "completion": "SELECT Delegate ,  Committee FROM election"}
{"prompt": "What are the carriers of devices that are not in stock anywhere?", "completion": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)"}
{"prompt": "Find the distinct first names of the students who have class senator votes.", "completion": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE"}
{"prompt": "Show the most common nationality of pilots.", "completion": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.", "completion": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What is the most frequently ordered product? Tell me the detail of the product", "completion": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What is the title, credit value, and department name for courses with more than one prerequisite?", "completion": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"}
{"prompt": "What are all the labels?", "completion": "SELECT DISTINCT label FROM Albums"}
{"prompt": "What are the names of accounts with checking balances greater than the average checking balance and savings balances below the average savings balance?", "completion": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)"}
{"prompt": "When did the staff member Janessa Sawayn leave the company?", "completion": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"}
{"prompt": "Which year has most number of concerts?", "completion": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Show the publishers that have publications with price higher than 10000000 and publications with price lower than 5000000.", "completion": "SELECT Publisher FROM publication WHERE Price  >  10000000 INTERSECT SELECT Publisher FROM publication WHERE Price  <  5000000"}
{"prompt": "How many courses does the student with id 171 actually attend?", "completion": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171"}
{"prompt": "How many high schoolers are in each grade?", "completion": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade"}
{"prompt": "Show the names of players and names of their coaches in descending order of the votes of players.", "completion": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC"}
{"prompt": "What is the first name of every student who has a dog but does not have a cat?", "completion": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')"}
{"prompt": "For each injury accident, find the date of the game and the name of the injured player in the game, and sort the results in descending order of game season.", "completion": "SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC"}
{"prompt": "List the project details of the projects with the research outcome described with the substring 'Published'.", "completion": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'"}
{"prompt": "Show the names of editors and the theme of journals for which they serve on committees.", "completion": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID"}
{"prompt": "List the name of singers that do not have any song.", "completion": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)"}
{"prompt": "Find the the names of the tourist attractions that the tourist named Alison visited but Rosalind did not visit.", "completion": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\""}
{"prompt": "Show all ministers and parties they belong to in descending order of the time they took office.", "completion": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC"}
{"prompt": "List names of all pilot aged 30 or younger in descending alphabetical order.", "completion": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC"}
{"prompt": "Count the number of accounts corresponding to each customer id.", "completion": "SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id"}
{"prompt": "Find the number of vocal types used in song \"Le Pop\"", "completion": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""}
{"prompt": "What are the starting years shared by the technicians from the team \"CLE\" or \"CWS\"?", "completion": "SELECT Starting_Year FROM technician WHERE Team  =  \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"CWS\""}
{"prompt": "What are all the role codes, role names, and role descriptions?", "completion": "SELECT role_code ,  role_name ,  role_description FROM ROLES"}
{"prompt": "Show the country where people older than 30 and younger than 25 are from.", "completion": "SELECT country FROM people WHERE age  <  25 INTERSECT SELECT country FROM people WHERE age  >  30"}
{"prompt": "How many models does each car maker produce? List maker full name, id and the number.", "completion": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;"}
{"prompt": "Show first name and last name for all students.", "completion": "SELECT Fname ,  Lname FROM Student"}
{"prompt": "What are the classes of races that have two or more corresponding races?", "completion": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2"}
{"prompt": "What are the songs in volumes that have resulted in a nomination at music festivals?", "completion": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\""}
{"prompt": "What is the total number of languages used in Aruba?", "completion": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\""}
{"prompt": "List the distinct region of clubs in ascending alphabetical order.", "completion": "SELECT DISTINCT Region FROM club ORDER BY Region ASC"}
{"prompt": "What are the names of all the subjects.", "completion": "SELECT subject_name FROM SUBJECTS"}
{"prompt": "Show all company names and headquarters in the descending order of market value.", "completion": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC"}
{"prompt": "Show names of cities and names of counties they are in.", "completion": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"}
{"prompt": "Find the name, age, and job title of persons who are friends with Alice for the longest years.", "completion": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')"}
{"prompt": "What are the last names of the author of the paper titled \"Binders Unbound\"?", "completion": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\""}
{"prompt": "List the industry shared by the most companies.", "completion": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "What are the distinct reigns of wrestlers whose location is not \"Tokyo,Japan\" ?", "completion": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"Tokyo , Japan\""}
{"prompt": "What are the names and ids of customers whose address contains TN?", "completion": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\""}
{"prompt": "Find the phone numbers of customers using the most common policy type among the available policies.", "completion": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)"}
{"prompt": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.", "completion": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1"}
{"prompt": "How many vehicle in total?", "completion": "SELECT count(*) FROM Vehicles;"}
{"prompt": "What are the names of the employees who never received any evaluation?", "completion": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"}
{"prompt": "Show the number of buildings with a height above the average or a number of floors above the average.", "completion": "SELECT count(*) FROM building WHERE height_feet  >  (SELECT avg(height_feet) FROM building) OR floors  >  (SELECT avg(floors) FROM building)"}
{"prompt": "Find the list of distinct ranks for faculty.", "completion": "SELECT DISTINCT rank FROM Faculty"}
{"prompt": "Return all distinct detention type codes.", "completion": "SELECT DISTINCT detention_type_code FROM Detention"}
{"prompt": "What is the average age of students who have city code \"NYC\" and have secretary votes for the spring election cycle?", "completion": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\""}
{"prompt": "What are the different names and countries of origins for all artists whose song ratings are above 9?", "completion": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9"}
{"prompt": "Find the total and average amount of settlements.", "completion": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements"}
{"prompt": "Find the name of dorms only for female (F gender).", "completion": "SELECT dorm_name FROM dorm WHERE gender  =  'F'"}
{"prompt": "Find the first names of the faculty members who are playing Canoeing or Kayaking.", "completion": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'"}
{"prompt": "Find the SSN and name of scientists who are assigned to the project with the longest hours.", "completion": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"}
{"prompt": "List the year in which there are more than one festivals.", "completion": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*)  >  1"}
{"prompt": "How many settlements are there in total?", "completion": "SELECT count(*) FROM Settlements"}
{"prompt": "What are the distinct first names, last names, and phone numbers for customers with accounts?", "completion": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"}
{"prompt": "What is the maximum enrollment across all schools?", "completion": "SELECT max(Enrollment) FROM university"}
{"prompt": "Which cities have regional population above 8000000 or below 5000000?", "completion": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000"}
{"prompt": "What are the maximum and minimum population of the counties?", "completion": "SELECT max(Population) ,  min(Population) FROM county"}
{"prompt": "Return the characters for actors, ordered by age descending.", "completion": "SELECT Character FROM actor ORDER BY age DESC"}
{"prompt": "Who performed the song named \"Badlands\"? Show the first name and the last name.", "completion": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\""}
{"prompt": "What are the names and ages of editors?", "completion": "SELECT Name ,  Age FROM editor"}
{"prompt": "What is the name of the instructor who advises the student with the greatest number of total credits?", "completion": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"}
{"prompt": "What is the customer id with most number of cards, and how many does he have?", "completion": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Find the names of all patients who have an undergoing treatment and are staying in room 111.", "completion": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111"}
{"prompt": "What are card ids, customer ids, card types, and card numbers for each customer card?", "completion": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards"}
{"prompt": "What are the cities with exactly two airports?", "completion": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2"}
{"prompt": "List the name of albums that are released by aritist whose name has 'Led'", "completion": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'"}
{"prompt": "How many departments are in each school?", "completion": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code"}
{"prompt": "Which tourist attractions do the tourists Vincent and Marcelle visit? Tell me the names of the attractions.", "completion": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Marcelle\""}
{"prompt": "How many diffrent dorm amenities are there?", "completion": "SELECT count(*) FROM dorm_amenity"}
{"prompt": "Count the number of different directors.", "completion": "SELECT COUNT (DISTINCT director) FROM movie"}
{"prompt": "Show template ids, version numbers, and template type codes for all templates.", "completion": "SELECT template_id ,  version_number ,  template_type_code FROM Templates"}
{"prompt": "What is the date when the document \"Marry CV\" was stored?", "completion": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\""}
{"prompt": "How many tracks do we have?", "completion": "SELECT count(*) FROM track"}
{"prompt": "What are the names of companies with revenue between 100 and 150?", "completion": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150"}
{"prompt": "How many students are older than 20 in each dorm?", "completion": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name"}
{"prompt": "Find the number of scientists involved for each project name.", "completion": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name"}
{"prompt": "What is the maximum price of wines from the appelation in the Central Coast area, which was produced before 2005?", "completion": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Central Coast\" AND T2.year  <  2005"}
{"prompt": "How many cartoons were written by \"Joseph Kuhr\"?", "completion": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";"}
{"prompt": "For each dorm, how many amenities does it have?", "completion": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid"}
{"prompt": "How much did the the player with first name Len and last name Barker earn between 1985 to 1990 in total?", "completion": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;"}
{"prompt": "Find the cities which were once a host city after 2010?", "completion": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010"}
{"prompt": "What are flight numbers of flights arriving at City \"Aberdeen\"?", "completion": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\""}
{"prompt": "display those employees who contain a letter z to their first name and also display their last name, city.", "completion": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"}
{"prompt": "Show the description of the transaction type that occurs most frequently.", "completion": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "Return all the distinct secretary votes made in the fall election cycle.", "completion": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\""}
{"prompt": "What are the template ids with template type description \"Presentation\".", "completion": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\""}
{"prompt": "Find the name and email for the users who have more than one follower.", "completion": "SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1"}
{"prompt": "What are the first and last names of all students who are not living in the city HKG and order the results by age?", "completion": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age"}
{"prompt": "For students who have pets , how many pets does each student have ? list their ids instead of names .", "completion": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid"}
{"prompt": "Find the policy type the most customers choose.", "completion": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Find the first name and gender of the student who has allergy to milk but not cat.", "completion": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")"}
{"prompt": "What is the first name of the author with last name \"Ueno\"?", "completion": "SELECT fname FROM authors WHERE lname  =  \"Ueno\""}
{"prompt": "Find the address and staff number of the shops that do not have any happy hour.", "completion": "SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)"}
{"prompt": "What are the types of vocals that the musician with the last name \"Heilo\" played in \"Der Kapitan\"?", "completion": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\""}
{"prompt": "List the publication dates of publications with 3 lowest prices.", "completion": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3"}
{"prompt": "How many teachers does the student named MADLOCK RAY have?", "completion": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"MADLOCK\" AND T1.lastname  =  \"RAY\""}
{"prompt": "What is the first and last name of all the German drivers?", "completion": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\""}
{"prompt": "What is the color code and description of the product named \"chervil\"?", "completion": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\""}
{"prompt": "How many times has the student Linda Smith visited Subway?", "completion": "SELECT count(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";"}
{"prompt": "Find the maximum age of all the students.", "completion": "SELECT max(Age) FROM STUDENT"}
{"prompt": "How many perpetrators are there?", "completion": "SELECT count(*) FROM perpetrator"}
{"prompt": "What are the names of the countries with no car makers?", "completion": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;"}
{"prompt": "list all cartoon titles and their directors ordered by their air date", "completion": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date"}
{"prompt": "What are the names of conductors, sorted descending by the number of years they have worked?", "completion": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC"}
{"prompt": "Show ids for all employees with at least 100000 salary.", "completion": "SELECT eid FROM Employee WHERE salary  >  100000"}
{"prompt": "What is the average duration in milliseconds of tracks that belong to Latin or Pop genre?", "completion": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Latin\" OR T1.Name  =  \"Pop\""}
{"prompt": "What are the names of all songs produced by the artist with the first name \"Marianne\"?", "completion": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\""}
{"prompt": "Show the names of members whose country is \"United States\" or \"Canada\".", "completion": "SELECT Name FROM member WHERE Country  =  \"United States\" OR Country  =  \"Canada\""}
{"prompt": "What are the first names and last names of the students who are 18 years old and have vice president votes.", "completion": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18"}
{"prompt": "Which physician was trained in the procedure that costs the most.", "completion": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1"}
{"prompt": "List the names of wrestlers and the teams in elimination in descending order of days held.", "completion": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC"}
{"prompt": "What is the average salary of employees who have a commission percentage that is not null?", "completion": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id"}
{"prompt": "What is the total surface area of the continents Asia and Europe?", "completion": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\""}
{"prompt": "Find the id and number of shops for the company that produces the most expensive furniture.", "completion": "SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1"}
{"prompt": "List the total scores of body builders in ascending order.", "completion": "SELECT Total FROM body_builder ORDER BY Total ASC"}
{"prompt": "What are the name of rooms booked by customers whose first name has \"ROY\" in part?", "completion": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'"}
{"prompt": "Which directors had a movie both in the year 1999 and 2000?", "completion": "SELECT director FROM movie WHERE YEAR  =  2000 INTERSECT SELECT director FROM movie WHERE YEAR  =  1999"}
{"prompt": "How much salary did the top 3 well-paid players get in 2001?", "completion": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;"}
{"prompt": "What are the checking and savings balances in accounts belonging to Brown?", "completion": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'"}
{"prompt": "Find the name of the nurse who has the largest number of appointments.", "completion": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Show other account details for account with name 338.", "completion": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\""}
{"prompt": "What are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates?", "completion": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date"}
{"prompt": "For each position, what is the maximum number of  hours for students who spent more than 1000 hours training?", "completion": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos"}
{"prompt": "What are the name of the players who received a card in descending order of the hours of training?", "completion": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC"}
{"prompt": "Find the id of instructors who taught a class in Fall 2009 but not in Spring 2010.", "completion": "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"prompt": "What is the last name and office of the professor from the history department?", "completion": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'"}
{"prompt": "What is the number of aircraft?", "completion": "SELECT count(*) FROM aircraft"}
{"prompt": "Select the average price of each manufacturer's products, showing the manufacturer's name.", "completion": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"}
{"prompt": "Find the total revenue created by the companies whose headquarter is located at Austin.", "completion": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'"}
{"prompt": "What are the years of opening for tracks with seating between 4000 and 5000?", "completion": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000"}
{"prompt": "Show all video games and their types in the order of their names.", "completion": "SELECT gname ,  gtype FROM Video_games ORDER BY gname"}
{"prompt": "Show names of all high school students who do not have any friends.", "completion": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"}
{"prompt": "find the number of medicines offered by each trade.", "completion": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name"}
{"prompt": "Find all the distinct district names ordered by city area in descending.", "completion": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC"}
{"prompt": "What are the product id and product type of the cheapest product?", "completion": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1"}
{"prompt": "What are the student IDs and middle names of the students enrolled in at most two courses?", "completion": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2"}
{"prompt": "List the countries that have more than one mountain.", "completion": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1"}
{"prompt": "What are the names of patients who are staying in room 111 and have an undergoing treatment?", "completion": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111"}
{"prompt": "Show the top 3 apartment type codes sorted by the average number of rooms in descending order.", "completion": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3"}
{"prompt": "Find the component amounts and names of all furnitures that have more than 10 components.", "completion": "SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10"}
{"prompt": "What are the department names, cities, and state provinces for each department?", "completion": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"}
{"prompt": "What is the best rank of losers across all matches?", "completion": "SELECT min(loser_rank) FROM matches"}
{"prompt": "What is maximum, minimum and average amount of outstanding of customer?", "completion": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;"}
{"prompt": "For each city, return the highest latitude among its stations.", "completion": "SELECT city ,  max(lat) FROM station GROUP BY city"}
{"prompt": "How many professors do have a Ph.D. degree?", "completion": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'"}
{"prompt": "What are the unique labels for the albums?", "completion": "SELECT count(DISTINCT label) FROM albums"}
{"prompt": "Find all the songs produced by artists with first name \"Marianne\".", "completion": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\""}
{"prompt": "On which day and in which zip code was the min dew point lower than any day in zip code 94107?", "completion": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)"}
{"prompt": "What are airlines that have flights arriving at airport 'AHD'?", "completion": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\""}
{"prompt": "List the names of countries whose language is not \"German\".", "completion": "SELECT Name FROM country WHERE Languages != \"German\""}
{"prompt": "Find the names of all procedures which cost more than 1000 but which physician John Wen was not trained in?", "completion": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""}
{"prompt": "What is the id of the event with the most participants?", "completion": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Find the state and country of all cities with post code starting with 4.", "completion": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\""}
{"prompt": "Find the first name and country code of the oldest player.", "completion": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1"}
{"prompt": "How many car models are produced by each maker ? Only list the count and the maker full name .", "completion": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;"}
{"prompt": "Give me a list of names and years of races that had any driver whose forename is Lewis?", "completion": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\""}
{"prompt": "What are the price ranges of hotels?", "completion": "SELECT price_range FROM HOTELS"}
{"prompt": "What campus had more than 400 total enrollment but more than 200 full time enrollment in year 1956?", "completion": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200"}
{"prompt": "How many people in total can stay in the modern rooms of this inn?", "completion": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';"}
{"prompt": "What are the names of representatives whose party is not \"Republican\"?", "completion": "SELECT Name FROM Representative WHERE Party != \"Republican\""}
{"prompt": "Give the address of the staff member who has the first name Elsa.", "completion": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'"}
{"prompt": "Show the names of companies and the number of employees they have", "completion": "SELECT T3.Name ,  COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID GROUP BY T3.Name"}
{"prompt": "How many faculty lines are there at San Francisco State University in 2004?", "completion": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\""}
{"prompt": "What is the average height of the players from the college named 'Yale University'?", "completion": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';"}
{"prompt": "For each user, find their name and the number of reviews written by them.", "completion": "SELECT T1.name ,  count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id"}
{"prompt": "What are the name and description for location code x?", "completion": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\""}
{"prompt": "List the name of musicals that do not have actors.", "completion": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)"}
{"prompt": "What are the total number of students enrolled in ACCT-211?", "completion": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'"}
{"prompt": "What is the name, city, and country of the airport with the lowest altitude?", "completion": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1"}
{"prompt": "Return the full name of the staff who provided a customer with the first name April and the last name Burns with a film rental.", "completion": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'"}
{"prompt": "Show all flight numbers with aircraft Airbus A340-300.", "completion": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\""}
{"prompt": "how many schools exist in total?", "completion": "SELECT count(DISTINCT school_code) FROM department"}
{"prompt": "List all the name of organizations in order of the date formed.", "completion": "SELECT organization_name FROM organizations ORDER BY date_formed ASC"}
{"prompt": "What are the names and ids of documents that have the type code BK?", "completion": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\""}
{"prompt": "What is the membership card held by both members living in Hartford and ones living in Waterbury address?", "completion": "SELECT membership_card FROM member WHERE address  =  'Hartford' INTERSECT SELECT membership_card FROM member WHERE address  =  'Waterbury'"}
{"prompt": "How many artists are there?", "completion": "SELECT count(*) FROM artist"}
{"prompt": "What are the details of the project that is producing both patents and papers as outcomes?", "completion": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'"}
{"prompt": "What are the dates of transactions with at least 100 share count or amount bigger than 100?", "completion": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100"}
{"prompt": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?", "completion": "select name from teacher where hometown != \"little lever urban district\""}
{"prompt": "Who is the oldest person?", "completion": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)"}
{"prompt": "Which last names are both used by customers and by staff?", "completion": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff"}
{"prompt": "Count the total number of clubs.", "completion": "SELECT count(*) FROM club"}
{"prompt": "For each hometown, how many teachers are there?", "completion": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown"}
{"prompt": "Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties?", "completion": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2"}
{"prompt": "How many pets have a greater weight than 10?", "completion": "SELECT count(*) FROM pets WHERE weight  >  10"}
{"prompt": "Find the number of professors in accounting department.", "completion": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  \"Accounting\""}
{"prompt": "find the name of people whose height is lower than the average.", "completion": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)"}
{"prompt": "What is the first and last name of artist who performed \"Le Pop\"?", "completion": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\""}
{"prompt": "Which grade has the most high schoolers?", "completion": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the first names of all professors who teach more than one class?", "completion": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1"}
{"prompt": "What are the official names of cities that have population over 1500 or less than 500?", "completion": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500"}
{"prompt": "List the name and assets of each company in ascending order of company name.", "completion": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC"}
{"prompt": "Find the total amount of bonus given in all the evaluations.", "completion": "SELECT sum(bonus) FROM evaluation"}
{"prompt": "What are the first names of all players, and their total ranking points?", "completion": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"}
{"prompt": "What is the number of days that had an average humity above 50 and an average visibility above 8?", "completion": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8"}
{"prompt": "What are the coupon amount of the coupons owned by both good and bad customers?", "completion": "SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'bad'"}
{"prompt": "What are the maximum, minimum, and average booked count for the products booked?", "completion": "SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked"}
{"prompt": "Show flight number for all flights with more than 2000 distance.", "completion": "SELECT flno FROM Flight WHERE distance  >  2000"}
{"prompt": "Find the names of artists that do not have any albums.", "completion": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId"}
{"prompt": "List the titles of all items in alphabetic order .", "completion": "SELECT title FROM item ORDER BY title"}
{"prompt": "What is the name of the most expensive product?", "completion": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"}
{"prompt": "How many routes does American Airlines operate?", "completion": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'"}
{"prompt": "Show names for all employees who have certificate of Boeing 737-800.", "completion": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\""}
{"prompt": "What are the medicine and trade names that can interact as an inhibitor and activitor with enzymes?", "completion": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'"}
{"prompt": "What is the location with the most cinemas opened in year 2010 or later?", "completion": "SELECT LOCATION FROM cinema WHERE openning_year  >=  2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the names of representatives in descending order of votes?", "completion": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC"}
{"prompt": "What is the number of employees from each city?", "completion": "SELECT count(*) ,  city FROM employee GROUP BY city"}
{"prompt": "How many friends does Dan have?", "completion": "SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan'"}
{"prompt": "Which districts have at least two addresses?", "completion": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"}
{"prompt": "What is the ship with the largest amount of tonnage called?", "completion": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1"}
{"prompt": "What is the average miles per gallon of all the cards with 4 cylinders?", "completion": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;"}
{"prompt": "Show the average, minimum, and maximum ticket prices for exhibitions for all years before 2009.", "completion": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009"}
{"prompt": "What is the name of the artist with the greatest number of albums?", "completion": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "Show all the grades of the high schoolers.", "completion": "SELECT grade FROM Highschooler"}
{"prompt": "List the most common hometown of teachers.", "completion": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "Find the names of all directors whose movies are rated by Sarah Martinez.", "completion": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'"}
{"prompt": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "completion": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'"}
{"prompt": "what are the name of players who get more than the average points.", "completion": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)"}
{"prompt": "List the number of invoices from the US, grouped by state.", "completion": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;"}
{"prompt": "What are the names of all movies that were made after 2000 or reviewed by Brittany Harris?", "completion": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000"}
{"prompt": "What is the code of the product type with an average price higher than the average price of all products?", "completion": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)"}
{"prompt": "Where is the youngest teacher from?", "completion": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1"}
{"prompt": "What is the name of the person who is the oldest?", "completion": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)"}
{"prompt": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?", "completion": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';"}
{"prompt": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?", "completion": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id"}
{"prompt": "Find the number of distinct currency codes used in drama workshop groups.", "completion": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"}
{"prompt": "Which physicians are affiliated with both Surgery and Psychiatry departments? Tell me their names.", "completion": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry'"}
{"prompt": "What is the code of the school where the accounting department belongs to?", "completion": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\""}
{"prompt": "What is the name and checking balance of the account which has the lowest savings balance?", "completion": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"}
{"prompt": "How many books fall into each category?", "completion": "SELECT category ,  count(*) FROM book_club GROUP BY category"}
{"prompt": "How many drivers are from Hartford city or younger than 40?", "completion": "SELECT count(*) FROM driver WHERE home_city  =  'Hartford' OR age  <  40"}
{"prompt": "Show the name of the conductor that has conducted the most number of orchestras.", "completion": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "Show ids for all the male faculty.", "completion": "SELECT FacID FROM Faculty WHERE Sex  =  'M'"}
{"prompt": "Which vocal type has the band mate with last name \"Heilo\" played the most?", "completion": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"Heilo\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What is the name of tracks whose genre is Rock?", "completion": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";"}
{"prompt": "What are the country codes of countries where people use languages other than English?", "completion": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\""}
{"prompt": "What is the average edispl for all volvos?", "completion": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';"}
{"prompt": "How many documents are there of each type?", "completion": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code"}
{"prompt": "List the names of players in ascending order of votes.", "completion": "SELECT Player_name FROM player ORDER BY Votes ASC"}
{"prompt": "What is the number of branches that have more than the average number of memberships?", "completion": "SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch)"}
{"prompt": "What are the distinct nominees of the musicals with the award that is not \"Tony Award\"?", "completion": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\""}
{"prompt": "How many users are logged in?", "completion": "SELECT count(*) FROM users WHERE user_login  =  1"}
{"prompt": "What are the names of the amenities that Smith Hall has?", "completion": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'"}
{"prompt": "What are the names of departments that have primarily affiliated physicians.", "completion": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1"}
{"prompt": "What is the first and second line for all addresses?", "completion": "SELECT line_1 ,  line_2 FROM addresses"}
{"prompt": "Show name of all students who have some friends and also are liked by someone else.", "completion": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id"}
{"prompt": "Find the tourist attractions that have parking or shopping as their feature details. What are the names of the attractions?", "completion": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'"}
{"prompt": "What are the draft pick numbers and draft classes for players who play the Defender position?", "completion": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\""}
{"prompt": "For each account type, find the average account balance of customers with credit score lower than 50.", "completion": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type"}
{"prompt": "show the train name and station name for each train.", "completion": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id"}
{"prompt": "Return the names and ids of customers who have TN in their address.", "completion": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\""}
{"prompt": "what are the last names of the teachers who teach grade 5?", "completion": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5"}
{"prompt": "What is the version number and template type code for the template with version number later than 5?", "completion": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5"}
{"prompt": "What is the denomination of the school the most players belong to?", "completion": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "Find the number of routes from the United States to Canada.", "completion": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')"}
{"prompt": "Find the category descriptions of the products whose descriptions include letter 't'.", "completion": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'"}
{"prompt": "Show the student id of the oldest student.", "completion": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)"}
{"prompt": "What are the details for all projects that did not hire any staff in a research role?", "completion": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )"}
{"prompt": "Which order's shipment tracking number is \"3452\"? Give me the id of the order.", "completion": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\""}
{"prompt": "Count the number of accounts.", "completion": "SELECT count(*) FROM Accounts"}
{"prompt": "What are the booking start and end dates of the apartments with type code \"Duplex\"?", "completion": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\""}
{"prompt": "What are the ids of the students who either registered or attended a course?", "completion": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance"}
{"prompt": "What is the average enrollment number?", "completion": "SELECT avg(enr) FROM College"}
{"prompt": "Find the names and descriptions of courses that belong to the subject named \"Computer Science\".", "completion": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\""}
{"prompt": "What is all the information about hiring?", "completion": "SELECT * FROM hiring"}
{"prompt": "Show the name, phone, and payment method code for all customers in descending order of customer number.", "completion": "SELECT customer_name ,  customer_phone ,  payment_method_code FROM customers ORDER BY customer_number DESC"}
{"prompt": "How many undergraduates are there at San Jose State", "completion": "SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Jose State University\""}
{"prompt": "What are the names of the singers that have more than one songs?", "completion": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1"}
{"prompt": "How many flights depart from City Aberdeen?", "completion": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\""}
{"prompt": "How many accounts are there for each customer id?", "completion": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id"}
{"prompt": "What are the venues of all the matches? Sort them in the descending order of match date.", "completion": "SELECT venue FROM MATCH ORDER BY date DESC"}
{"prompt": "Find the names of accounts whose checking balance is above the average checking balance, but savings balance is below the average savings balance.", "completion": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)"}
{"prompt": "Show the name and the release year of the song by the youngest singer.", "completion": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1"}
{"prompt": "Find the team of each player and sort them in ascending alphabetical order.", "completion": "SELECT Team FROM player ORDER BY Team ASC"}
{"prompt": "Where is the headquarter of the company founded by James?", "completion": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'"}
{"prompt": "Find the name and rank points of the winner who won the most times.", "completion": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the different majors?", "completion": "SELECT DISTINCT Major FROM Student"}
{"prompt": "What is the description of role code ED?", "completion": "SELECT role_description FROM ROLES WHERE role_code = \"ED\";"}
{"prompt": "What is \"the date in location from\" and \"the date in location to\" for the document with name \"Robin CV\"?", "completion": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\""}
{"prompt": "Count the number of tracks that are of the media type \"AAC audio file\".", "completion": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC audio file\""}
{"prompt": "What are the team and the location of school each player belongs to?", "completion": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID"}
{"prompt": "What are the names, address roads, and cities of the branches ordered by opening year?", "completion": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year"}
{"prompt": "Eduardo Martins is a customer at which company?", "completion": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";"}
{"prompt": "Show the prices of publications whose publisher is either \"Person\" or \"Wiley\"", "completion": "SELECT Price FROM publication WHERE Publisher  =  \"Person\" OR Publisher  =  \"Wiley\""}
{"prompt": "List the area and county of all appelations.", "completion": "SELECT Area ,  County FROM APPELLATIONS"}
{"prompt": "What are the distinct ages of students who have secretary votes in the fall election cycle?", "completion": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\""}
{"prompt": "What is the minimum, mean, and maximum age across all students?", "completion": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student"}
{"prompt": "What are the top three apartment types in terms of the average room count? Give me the", "completion": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3"}
{"prompt": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "completion": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id"}
{"prompt": "What is the id, forname and surname of the driver who had the first position in terms of laptime at least twice?", "completion": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2"}
{"prompt": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?", "completion": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'"}
{"prompt": "How many regions were affected by each storm?", "completion": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id"}
{"prompt": "Find the ids of reviewers who didn't only give 4 star.", "completion": "SELECT rID FROM Rating WHERE stars != 4"}
{"prompt": "What are the details for statements with the details 'Private Project', and what are the names of the corresponding documents?", "completion": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'"}
{"prompt": "What is the first name, last name, and phone of the customer with account name 162?", "completion": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\""}
{"prompt": "What is the average age of the members of the club \"Bootup Baltimore\"?", "completion": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\""}
{"prompt": "From the trip record, find the number of unique bikes.", "completion": "SELECT count(DISTINCT bike_id) FROM trip"}
{"prompt": "What is the name of party with most number of members?", "completion": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What is the average song rating for each language?", "completion": "SELECT avg(rating) ,  languages FROM song GROUP BY languages"}
{"prompt": "Give me the maximum low temperature and average precipitation at the Amersham station.", "completion": "SELECT max(t1.low_temperature) ,  avg(t1.precipitation) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  \"Amersham\""}
{"prompt": "What is the date of birth of every customer whose status code is 'Good Customer'?", "completion": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'"}
{"prompt": "What are distinct locations where tracks are located?", "completion": "SELECT DISTINCT LOCATION FROM track"}
{"prompt": "What are names of stations that have average bike availability above 10 and are not located in San Jose city?", "completion": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\""}
{"prompt": "Find the number of departments in each school.", "completion": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code"}
{"prompt": "What is the airport code of the airport with the most flights?", "completion": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the names of races that were held after 2017 and the circuits were in the country of Spain?", "completion": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017"}
{"prompt": "What are the different locations of the school with the code BUS?", "completion": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'"}
{"prompt": "What are the names of the top 8 countries by total invoice size and what are those sizes?", "completion": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;"}
{"prompt": "What are the campuses that opened in 1958?", "completion": "SELECT campus FROM campuses WHERE YEAR  =  1958"}
{"prompt": "List ids and details for all projects.", "completion": "SELECT project_id ,  project_details FROM Projects"}
{"prompt": "Which physicians are trained in procedures that are more expensive than 5000?", "completion": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000"}
{"prompt": "What are the tracks that Dean Peeters bought?", "completion": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";"}
{"prompt": "Find the number of records of each policy type and its type code.", "completion": "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code"}
{"prompt": "What is the maximum OMIM value in the database?", "completion": "SELECT max(OMIM) FROM enzyme"}
{"prompt": "How many students play each sport?", "completion": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname"}
{"prompt": "Which manager won the most manager award? Give me the manager's first name, last name and id.", "completion": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;"}
{"prompt": "What is the description of the type of the company who concluded its contracts most recently?", "completion": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id JOIN Ref_Company_Types AS T3 ON T1.company_type_code  =  T3.company_type_code ORDER BY T2.contract_end_date DESC LIMIT 1"}
{"prompt": "Find all the papers published by \"Aaron Turon\".", "completion": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\""}
{"prompt": "Show total points of all players.", "completion": "SELECT sum(Points) FROM player"}
{"prompt": "How many members have the black membership card?", "completion": "SELECT count(*) FROM member WHERE Membership_card  =  'Black'"}
{"prompt": "How long is the total lesson time taught by staff with first name as Janessa and last name as Sawayn?", "completion": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"prompt": "Return the highest acc percent across all basketball matches.", "completion": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1"}
{"prompt": "How many credits does the department offer?", "completion": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code"}
{"prompt": "Which department has the highest average instructor salary?", "completion": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"}
{"prompt": "List the name and the number of enrolled student for each course.", "completion": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name"}
{"prompt": "What is the total amount of grant money given to each organization and what is its id?", "completion": "SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id"}
{"prompt": "What are the first names and department numbers for employees with last name McEwen?", "completion": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'"}
{"prompt": "What are the different types of video games?", "completion": "SELECT DISTINCT gtype FROM Video_games"}
{"prompt": "How many kinds of roles are there for the staff?", "completion": "SELECT count(DISTINCT role_code) FROM Project_Staff"}
{"prompt": "Find the addresses and author IDs of the course authors that teach at least two courses.", "completion": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2"}
{"prompt": "What is the partition id of the user named \"Iron Man\".", "completion": "SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man'"}
{"prompt": "What is the date of birth for the staff member named Janessa Sawayn?", "completion": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"}
{"prompt": "What are teh names of the different products, as well as the number of customers who have ordered each product.", "completion": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name"}
{"prompt": "Show all the activity names and the number of faculty involved in each activity.", "completion": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID"}
{"prompt": "Show all allergies with type food.", "completion": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\""}
{"prompt": "What are the names and ids of all countries with at least one car maker?", "completion": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;"}
{"prompt": "Show all student ids and the number of hours played.", "completion": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid"}
{"prompt": "What is the first and last name of all students who play Football or Lacrosse?", "completion": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\""}
{"prompt": "Show the start dates and end dates of all the apartment bookings.", "completion": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings"}
{"prompt": "How many tracks are in the AAC audio file media type?", "completion": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC audio file\""}
{"prompt": "List the first and last name for players who participated in all star game in 1998.", "completion": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998"}
{"prompt": "What are the names of parties that have no members?", "completion": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)"}
{"prompt": "How many students are 18 years old?", "completion": "SELECT count(*) FROM Student WHERE age  =  18"}
{"prompt": "Return the maximum final tables made across all poker players who have earnings below 200000.", "completion": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000"}
{"prompt": "Count the number of documents that use the PPT template type.", "completion": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'"}
{"prompt": "Return the id and name of the document with the most paragraphs.", "completion": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "How many players enter hall of fame each year?", "completion": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;"}
{"prompt": "For each distinct test result, find the number of students who got the result.", "completion": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC"}
{"prompt": "What are the names of the artists who released a song that has the word love in its title, and where are the artists from?", "completion": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\""}
{"prompt": "What is the total number of companies?", "completion": "SELECT count(*) FROM company"}
{"prompt": "How many drama workshop groups are there in each city? Return both the city and the count.", "completion": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town"}
{"prompt": "What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction?", "completion": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\""}
{"prompt": "Show the most common position of players in match seasons.", "completion": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the names of wrestlers and their teams in elimination, ordered descending by days held?", "completion": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC"}
{"prompt": "Count the number of book clubs.", "completion": "SELECT count(*) FROM book_club"}
{"prompt": "Find the branch names of banks in the New York state.", "completion": "SELECT bname FROM bank WHERE state  =  'New York'"}
{"prompt": "Find the movies with the highest average rating. Return the movie titles and average rating.", "completion": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1"}
{"prompt": "When did Carole Bernhard first become a customer?", "completion": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";"}
{"prompt": "Find the name, checking balance and saving balance of all accounts in the bank.", "completion": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid"}
{"prompt": "Which customers have ever canceled the purchase of the product \"food\" (the item status is \"Cancel\")?", "completion": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1"}
{"prompt": "Show id and location of railways that are associated with more than one train.", "completion": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1"}
{"prompt": "How many music festivals have had each kind of result, ordered descending by count?", "completion": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"}
{"prompt": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in?", "completion": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'"}
{"prompt": "What are the distinct publishers of publications with price higher than 5000000?", "completion": "SELECT DISTINCT Publisher FROM publication WHERE Price  >  5000000"}
{"prompt": "What are the details and opening hours of the museums?", "completion": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID"}
{"prompt": "Show all distinct template type codes for all templates.", "completion": "SELECT DISTINCT template_type_code FROM Templates"}
{"prompt": "Find the name of dorms that do not have amenity TV Lounge.", "completion": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge'"}
{"prompt": "What are the average and minimum price (in Euro) of all products?", "completion": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents"}
{"prompt": "How many parties do we have?", "completion": "SELECT count(DISTINCT party_name) FROM party"}
{"prompt": "Find the names of the campus which has more faculties in 2002 than every campus in Orange county.", "completion": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")"}
{"prompt": "What are the names and types of the companies that have ever operated a flight?", "completion": "SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id"}
{"prompt": "What are the all games score and location of the school called Clemson?", "completion": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"}
{"prompt": "What is the total number of hours per week and number of games played by students under 20?", "completion": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20"}
{"prompt": "Find the names of the customers who have an deputy policy.", "completion": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\""}
{"prompt": "What are the ids and details of all statements?", "completion": "SELECT STATEMENT_ID ,  statement_details FROM Statements"}
{"prompt": "Return the issue dates of volumes by artists who are at most 23 years old?", "completion": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23"}
{"prompt": "Which film is rented at a fee of 0.99 and has less than 3 in the inventory? List the film title and id.", "completion": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3"}
{"prompt": "What are the names of the climbers, ordered by points descending?", "completion": "SELECT Name FROM climber ORDER BY Points DESC"}
{"prompt": "Return the name of the youngest captain.", "completion": "SELECT name FROM captain ORDER BY age LIMIT 1"}
{"prompt": "What is the name of the movie that is rated by most of times?", "completion": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What is the name and salary for employee with id 242518965?", "completion": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965"}
{"prompt": "Give the nationality that is most common across all people.", "completion": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "Find the type code of the most frequently used policy.", "completion": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Find the names of the channels that are broadcast in the morning.", "completion": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'"}
{"prompt": "Which states have both owners and professionals living there?", "completion": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals"}
{"prompt": "Find the names of the artists who are from UK and have produced English songs.", "completion": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"english\""}
{"prompt": "What are the card numbers of members from Kentucky?", "completion": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\""}
{"prompt": "Tell me the ages of the oldest and youngest students studying major 600.", "completion": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600"}
{"prompt": "What is the oldest log id and its corresponding problem id?", "completion": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1"}
{"prompt": "How many customers in state of CA?", "completion": "SELECT count(*) FROM customers WHERE state = \"CA\";"}
{"prompt": "Give the distinct headquarters of manufacturers.", "completion": "SELECT DISTINCT headquarter FROM manufacturers"}
{"prompt": "Find the name and country of origin for all artists who have release at least one song of resolution above 900.", "completion": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1"}
{"prompt": "Show the status of the city that has hosted the greatest number of competitions.", "completion": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "What is the primary conference of the school that has the lowest acc percent score in the competition?", "completion": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1"}
{"prompt": "Find the max, average, and minimum gpa of all students in each department.", "completion": "SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code"}
{"prompt": "Show all allergies with number of students affected.", "completion": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy"}
{"prompt": "Which country does customer with first name as Carole and last name as Bernhard lived in?", "completion": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\""}
{"prompt": "How much does the car accelerate that makes amc hornet sportabout (sw)?", "completion": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';"}
{"prompt": "For each language, list the number of TV Channels that use it.", "completion": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE"}
{"prompt": "What is the average number of gold medals for clubs?", "completion": "SELECT avg(Gold) FROM club_rank"}
{"prompt": "Find the names of nurses who are on call.", "completion": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse"}
{"prompt": "How many transcripts are listed?", "completion": "SELECT count(*) FROM Transcripts"}
{"prompt": "How many players have more than 1000 hours of training?", "completion": "SELECT count(*) FROM Player WHERE HS  >  1000"}
{"prompt": "List the name of ships that are not involved in any mission", "completion": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)"}
{"prompt": "List every album whose title starts with A in alphabetical order.", "completion": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;"}
{"prompt": "How many institutions are there?", "completion": "SELECT count(*) FROM inst"}
{"prompt": "What is the average and total transaction amount?", "completion": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions"}
{"prompt": "How many king beds are there?", "completion": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';"}
{"prompt": "Which teacher teaches the most students? Give me the first name and last name of the teacher.", "completion": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the last names that are used by customers and staff?", "completion": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff"}
{"prompt": "Show names of shops and the carriers of devices they have in stock.", "completion": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID"}
{"prompt": "List the full name (first and last name), and salary for those employees who earn below 6000.", "completion": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"}
{"prompt": "What is the first and last name of the students who are not in the largest major?", "completion": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)"}
{"prompt": "Which committees have delegates from both democratic party and liberal party?", "completion": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberal\""}
{"prompt": "Find the name of project that continues for the longest time.", "completion": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1"}
{"prompt": "How many distinct president votes are recorded?", "completion": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD"}
{"prompt": "What is the total amount of money loaned by banks in New York state?", "completion": "SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York'"}
{"prompt": "What are the names of countains that no climber has climbed?", "completion": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)"}
{"prompt": "Show all the distinct institution types.", "completion": "SELECT DISTINCT TYPE FROM institution"}
{"prompt": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?", "completion": "SELECT LOCATION FROM bridge WHERE name  =  'Kolob Arch' OR name  =  'Rainbow Bridge'"}
{"prompt": "Find the addresses of the course authors who teach the course with name \"operating system\" or \"data structure\".", "completion": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\""}
{"prompt": "Return the money rank of the poker player with the greatest height.", "completion": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1"}
{"prompt": "For each country and airline name, how many routes are there?", "completion": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name"}
{"prompt": "Find all the name of documents without any sections.", "completion": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)"}
{"prompt": "What is the first name, last name, and phone of the customer with card 4560596484842.", "completion": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\""}
{"prompt": "What are the type codes and descriptions of each budget type?", "completion": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes"}
{"prompt": "What document status codes do we have?", "completion": "SELECT document_status_code FROM Ref_Document_Status;"}
{"prompt": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?", "completion": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\""}
{"prompt": "What are the first, middle, and last names of all individuals, ordered by last name?", "completion": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name"}
{"prompt": "What are all the employee ids and the names of the countries in which they work?", "completion": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"}
{"prompt": "List the hardware model name for the phons that were produced by \"Nokia Corporation\" but whose screen mode type is not Text.", "completion": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Text\";"}
{"prompt": "What are the names of the technicians  and how many machines are they assigned to repair?", "completion": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name"}
{"prompt": "Give me a list of cities whose temperature in March is lower than that in July or higher than that in Oct?", "completion": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct"}
{"prompt": "What is the id and name of the enzyme that can interact with the most medicines as an activator?", "completion": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "how many cars were produced in 1980?", "completion": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;"}
{"prompt": "What is the name of the course that has the most student enrollment?", "completion": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "What is the placement date of the order whose invoice number is 10?", "completion": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10"}
{"prompt": "What are the titles of all albums that start with A in alphabetical order?", "completion": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;"}
{"prompt": "Show the number of card types.", "completion": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards"}
{"prompt": "What is the last name of the staff who has handled the first ever complaint?", "completion": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1"}
{"prompt": "Which year had the greatest number of courses?", "completion": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "How many customers in total?", "completion": "SELECT count(*) FROM Customers;"}
{"prompt": "How many institutions do not have an associated protein in our record?", "completion": "SELECT count(*) FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM protein)"}
{"prompt": "Find all the policy types that are used by more than 2 customers.", "completion": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2"}
{"prompt": "What are the names of the scientists, and how many projects are each of them working on?", "completion": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name"}
{"prompt": "What are the names of customers who never made an order.", "completion": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id"}
{"prompt": "Find the average age of losers and winners of all matches.", "completion": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches"}
{"prompt": "Return the title and inventory id of the film that is rented most often.", "completion": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "How many different payment methods are there?", "completion": "SELECT count(DISTINCT payment_method) FROM customers"}
{"prompt": "Give the total surface area covered by countries in Asia or Europe.", "completion": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\""}
{"prompt": "Return the grade that has the greatest number of high schoolers.", "completion": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "How many drivers are there?", "completion": "SELECT count(*) FROM driver"}
{"prompt": "Show the membership level with most number of members.", "completion": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Show the 3 counties with the smallest population.", "completion": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3"}
{"prompt": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?", "completion": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000"}
{"prompt": "What are lines 1 and 2 of the addressed of the customer with the email \"vbogisich@example.org\"?", "completion": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\""}
{"prompt": "What is the course description and number of credits for QM-261?", "completion": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'"}
{"prompt": "Find the average ram mib size of the chip models that are never used by any phone.", "completion": "SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)"}
{"prompt": "What is the name and date of the most recent race?", "completion": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1"}
{"prompt": "How many poker players are there?", "completion": "SELECT count(*) FROM poker_player"}
{"prompt": "What is the email of the student with first name \"Emma\" and last name \"Rohan\"?", "completion": "SELECT email_address FROM Students WHERE first_name  =  \"Emma\" AND last_name  =  \"Rohan\""}
{"prompt": "What are the products with the maximum page size A4 that also have a pages per minute color smaller than 5?", "completion": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5"}
{"prompt": "Show the ages of gymnasts in descending order of total points.", "completion": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC"}
{"prompt": "What are the last names of staff with email addressed containing the substring \"wrau\"?", "completion": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\""}
{"prompt": "List all the distinct cities", "completion": "SELECT DISTINCT city FROM addresses"}
{"prompt": "Find the name of the customer that has been involved in the most policies.", "completion": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "How many wines are produced at Robert Biale winery?", "completion": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\""}
{"prompt": "What is the id of the routes whose source and destination airports are in the United States?", "completion": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')"}
{"prompt": "How old is each gender, on average?", "completion": "SELECT avg(age) ,  gender FROM Person GROUP BY gender"}
{"prompt": "Count the number of authors.", "completion": "SELECT count(*) FROM authors"}
{"prompt": "What are the naems of all the projects, and how many scientists were assigned to each of them?", "completion": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name"}
{"prompt": "What are the total number of credits offered by each department?", "completion": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code"}
{"prompt": "List the addresses of all the course authors or tutors.", "completion": "SELECT address_line_1 FROM Course_Authors_and_Tutors"}
{"prompt": "What are the daily hire costs for the products with substring 'Book' in its name?", "completion": "SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%'"}
{"prompt": "Please show different software platforms and the corresponding number of devices using each.", "completion": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform"}
{"prompt": "List the names of all the distinct product names in alphabetical order?", "completion": "SELECT DISTINCT product_name FROM product ORDER BY product_name"}
{"prompt": "What is the entry name of the most expensive catalog (in USD)?", "completion": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"}
{"prompt": "List the names of mountains that do not have any climber.", "completion": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)"}
{"prompt": "What is the name of the customer with the worst credit score?", "completion": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1"}
{"prompt": "Which industry has the most companies?", "completion": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "What is the campus fee of \"San Francisco State University\" in year 1996?", "completion": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND T2.year  =  1996"}
{"prompt": "Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate.", "completion": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5"}
{"prompt": "Show the ids of all employees who have either destroyed a document or made an authorization to do this.", "completion": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"}
{"prompt": "Find the ids of orders whose status is 'Success'.", "completion": "SELECT actual_order_id FROM actual_orders WHERE order_status_code  =  'Success'"}
{"prompt": "What are the times used by climbers who climbed mountains in the country of Uganda?", "completion": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\""}
{"prompt": "Which nations have both hosts of age above 45 and hosts of age below 35?", "completion": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35"}
{"prompt": "what is the number of different channel owners?", "completion": "SELECT count(DISTINCT OWNER) FROM channel"}
{"prompt": "What is the id of the organization with the maximum number of outcomes and how many outcomes are there?", "completion": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What is the last transcript release date?", "completion": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1"}
{"prompt": "How many different professors are there for the different schools?", "completion": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code"}
{"prompt": "What are the names of students who have taken the prerequisite for the course International Finance?", "completion": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')"}
{"prompt": "What is the average GNP and total population in all nations whose government is US territory?", "completion": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\""}
{"prompt": "List all information about courses sorted by credits in the ascending order.", "completion": "SELECT * FROM COURSE ORDER BY Credits"}
{"prompt": "What is the total salary expenses of team Boston Red Stockings in 2010?", "completion": "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010"}
{"prompt": "What is the document type code with most number of documents?", "completion": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Give me the name of the customer who ordered the most items in total.", "completion": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"}
{"prompt": "Which institution does \"Katsuhiro Ueno\" belong to?", "completion": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\""}
{"prompt": "What is the description of the role named \"Proof Reader\"?", "completion": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\""}
{"prompt": "What is the average unit price of tracks that belong to Jazz genre?", "completion": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Jazz\""}
{"prompt": "What are the dates that have an average sea level pressure between 30.3 and 31?", "completion": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31"}
{"prompt": "Find the names of all the customers and staff members.", "completion": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff"}
{"prompt": "Show the title and director for all films.", "completion": "SELECT title ,  directed_by FROM film"}
{"prompt": "In zip code 94107, on which day neither Fog nor Rain was not observed?", "completion": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\""}
{"prompt": "List the name and the number of stations for all the cities that have at least 15 stations.", "completion": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15"}
{"prompt": "What is all the information about the Marketing department?", "completion": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"}
{"prompt": "Find the name and attribute ID of the attribute definitions with attribute value 0.", "completion": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0"}
{"prompt": "For each director who directed more than one movie, what are the titles and dates of release for all those movies?", "completion": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"}
{"prompt": "Find the name of the genre that is most frequent across all tracks.", "completion": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1"}
{"prompt": "Show teams that have suffered more than three eliminations.", "completion": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3"}
{"prompt": "How many players are from each country?", "completion": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name"}
{"prompt": "Show different type codes of products and the number of products with each type code.", "completion": "SELECT Product_Type_Code ,  COUNT(*) FROM Products GROUP BY Product_Type_Code"}
{"prompt": "Find the average age of students living in each dorm and the name of dorm.", "completion": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"}
{"prompt": "What is the total number of rooms available in this inn?", "completion": "SELECT count(*) FROM Rooms;"}
{"prompt": "Count the number of different software platforms.", "completion": "SELECT count(DISTINCT Software_Platform) FROM device"}
{"prompt": "IN which year did city \"Taizhou ( Zhejiang )\" serve as a host city?", "completion": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\""}
{"prompt": "List the name of ships whose nationality is not \"United States\".", "completion": "SELECT Name FROM ship WHERE Nationality != \"United States\""}
{"prompt": "List all program origins in the alphabetical order.", "completion": "SELECT origin FROM program ORDER BY origin"}
{"prompt": "What are the names of the different artists that have produced a song in English but have never receieved a rating higher than 8?", "completion": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8"}
{"prompt": "Tell me the age of the oldest dog.", "completion": "SELECT max(age) FROM Dogs"}
{"prompt": "Find the number of rooms located on each block floor.", "completion": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor"}
{"prompt": "What are the different budget type codes, and how many documents are there for each?", "completion": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code"}
{"prompt": "Find the name of students who took some course offered by Statistics department.", "completion": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'"}
{"prompt": "Which shops' number products is above the average? Give me the shop names.", "completion": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"}
{"prompt": "List the dates of enrollment and completion of the student with family name \"Zieme\" and personal name \"Bernie\".", "completion": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\""}
{"prompt": "How much in total does customer with first name as Carole and last name as Bernhard paid?", "completion": "SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Carole\" AND T2.last_name = \"Bernhard\""}
{"prompt": "Find the name of the product that has the smallest capacity.", "completion": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1"}
{"prompt": "Find the total savings balance of all accounts except the account with name \u2018Brown\u2019.", "completion": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown'"}
{"prompt": "Find the name and salary of instructors whose salary is below the average salary of the instructors in the Physics department.", "completion": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')"}
{"prompt": "Count the number of members in club \"Bootup Baltimore\" whose age is above 18.", "completion": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  >  18"}
{"prompt": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?", "completion": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2"}
{"prompt": "Find the name of the shops that do not hire any employee.", "completion": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"}
{"prompt": "Hom many musicians performed in the song \"Flash\"?", "completion": "SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  \"Flash\""}
{"prompt": "What are the IDs of customers who have \"Diana\" in part of their names?", "completion": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\""}
{"prompt": "Find the name of the person who has friends with age above 40 but not under age 30?", "completion": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"}
{"prompt": "What is the product, chromosome, and porphyria of the enzymes located at 'Cytosol'?", "completion": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'"}
{"prompt": "What is the department name of the students with lowest gpa belongs to?", "completion": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1"}
{"prompt": "What are the three colleges from which the most players are from?", "completion": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3"}
{"prompt": "Return the characters and durations for each actor.", "completion": "SELECT Character ,  Duration FROM actor"}
{"prompt": "For each aircraft that has won an award, what is its name and how many time has it won?", "completion": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft"}
{"prompt": "Find the name of tracks which are in both Movies and music playlists.", "completion": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'"}
{"prompt": "Find the last names of faculties in building Barton in alphabetic order.", "completion": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname"}
{"prompt": "List the distinct carriers of phones with memories bigger than 32.", "completion": "SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32"}
{"prompt": "How many students participated in tryouts for each college by descennding count?", "completion": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC"}
{"prompt": "How many courses does the department of Computer Information Systmes offer?", "completion": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\""}
{"prompt": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara.", "completion": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\""}
{"prompt": "How many project staff worked as leaders or started working before '1989-04-24 23:51:54'?", "completion": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'"}
{"prompt": "What are the nationalities that are shared by at least two people?", "completion": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2"}
{"prompt": "What is the name of the customer that made the order with the largest quantity?", "completion": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)"}
{"prompt": "What are the 3 counties that have the smallest population? Give me the county names.", "completion": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3"}
{"prompt": "What states have at least two representatives?", "completion": "SELECT State FROM representative GROUP BY State HAVING COUNT(*)  >=  2"}
{"prompt": "Count the number of different official languages corresponding to countries that players who play Defender are from.", "completion": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\""}
{"prompt": "What is the title and id of the film that has the greatest number of copies in inventory?", "completion": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "Find all the distinct visit dates.", "completion": "SELECT DISTINCT Visit_Date FROM VISITS"}
{"prompt": "How many projects are there?", "completion": "SELECT count(*) FROM Projects"}
{"prompt": "the names of models that launched between 2002 and 2004.", "completion": "SELECT Model_name FROM chip_model WHERE Launch_year BETWEEN 2002 AND 2004;"}
{"prompt": "Show first name, last name, age for all female students. Their sex is F.", "completion": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'"}
{"prompt": "List the contestant numbers and names, ordered by contestant name descending.", "completion": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC"}
{"prompt": "Which game type has most number of games?", "completion": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "List the distinct positions of pilots older than 30.", "completion": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30"}
{"prompt": "Return the last name of the staff member who handled the complaint with the earliest date raised.", "completion": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1"}
