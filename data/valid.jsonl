{"prompt": "Show all official native languages that contain the word \"English\".", "completion": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\""}
{"prompt": "Show the student IDs and numbers of friends corresponding to each.", "completion": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id"}
{"prompt": "Give the names of countries with English and French as official languages.", "completion": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\""}
{"prompt": "List the weight of the body builders who have snatch score higher than 140 or have the height greater than 200.", "completion": "SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T1.snatch  >  140 OR T2.height  >  200;"}
{"prompt": "How many students are enrolled in the class taught by some professor from the accounting department?", "completion": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'"}
{"prompt": "What are the average access counts of documents that have the functional area description \"Acknowledgement\"?", "completion": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Acknowledgement\""}
{"prompt": "How many states have smaller colleges than average?", "completion": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)"}
{"prompt": "Find the first name and country code of the player who did the most number of tours.", "completion": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1"}
{"prompt": "What are the names of nations speak both English and French?", "completion": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\""}
{"prompt": "Show the name and theme for all concerts and the number of singers in each concert.", "completion": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id"}
{"prompt": "Show the nicknames of schools that are not in division 1.", "completion": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\""}
{"prompt": "Show the phone, room, and building for the faculty named Jerry Prince.", "completion": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\""}
{"prompt": "what is the GDP of the city with the largest population.", "completion": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1"}
{"prompt": "How many songs are there?", "completion": "SELECT count(*) FROM Songs"}
{"prompt": "Show the different headquarters and number of companies at each headquarter.", "completion": "SELECT Headquarters ,  COUNT(*) FROM company GROUP BY Headquarters"}
{"prompt": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?", "completion": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";"}
{"prompt": "Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?", "completion": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1"}
{"prompt": "Return the lowest version number, along with its corresponding template type code.", "completion": "SELECT min(Version_Number) ,  template_type_code FROM Templates"}
{"prompt": "Count the number of distinct artists who have volumes.", "completion": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"}
{"prompt": "Find the details for all chip models.", "completion": "SELECT * FROM chip_model"}
{"prompt": "What are the team and starting year of technicians?", "completion": "SELECT Team ,  Starting_Year FROM technician"}
{"prompt": "Find the name of persons who are friends with Bob.", "completion": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'"}
{"prompt": "Show the names of members and the decoration themes they have.", "completion": "SELECT T1.Name ,  T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID"}
{"prompt": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "completion": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1"}
{"prompt": "What are the different names and credit scores of customers who have taken a loan?", "completion": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id"}
{"prompt": "Who are the players from Indonesia?", "completion": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\""}
{"prompt": "What is the name and capacity for the stadium with highest average attendance?", "completion": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1"}
{"prompt": "How many hours do the players train on average?", "completion": "SELECT avg(HS) FROM Player"}
{"prompt": "What is the title of the course that is a prerequisite for Mobile Computing?", "completion": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')"}
{"prompt": "Return the minimum, average and maximum distances traveled across all aircrafts.", "completion": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft"}
{"prompt": "Which problems are reported before 1978-06-26? Give me the ids of the problems.", "completion": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\""}
{"prompt": "What is the name, address, and number of students in the departments that have the 3 most students?", "completion": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3"}
{"prompt": "Show ids for all students who live in CHI.", "completion": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\""}
{"prompt": "What is the team and starting year for each technician?", "completion": "SELECT Team ,  Starting_Year FROM technician"}
{"prompt": "Count the number of artists.", "completion": "SELECT count(*) FROM artist"}
{"prompt": "Find the first names of all the authors who have written a paper with title containing the word \"Functional\".", "completion": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\""}
{"prompt": "Find the saving balance of the account with the highest checking balance.", "completion": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1"}
{"prompt": "What are the famous titles and ages of each artist, listed in descending order by age?", "completion": "SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC"}
{"prompt": "Count the number of transactions.", "completion": "SELECT count(*) FROM Financial_transactions"}
{"prompt": "Which policy type appears most frequently in the available policies?", "completion": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the public schools and what are their locations?", "completion": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'"}
{"prompt": "What are the names and scores of wines that are made of white color grapes?", "completion": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\""}
{"prompt": "Show the years, book titles, and publishers for all books, in descending order by year.", "completion": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC"}
{"prompt": "Show the types of schools that have two schools.", "completion": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2"}
{"prompt": "Find the name and budget of departments whose budgets are more than the average budget.", "completion": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"}
{"prompt": "Give the phones for departments in room 268.", "completion": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268"}
{"prompt": "display the department name and number of employees in each of the department.", "completion": "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name"}
{"prompt": "Find the codes of countries that have more than 50 players.", "completion": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50"}
{"prompt": "Who are the ministers, when did they take office, and when did they leave office, ordered by when they left office?", "completion": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office"}
{"prompt": "What are the email addresses of the drama workshop groups with address in Alaska state?", "completion": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\""}
{"prompt": "Sort employee names by their age in ascending order.", "completion": "SELECT name FROM employee ORDER BY age"}
{"prompt": "What is the mean longitude for all stations that have never had more than 10 bikes available?", "completion": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)"}
{"prompt": "How many colleges in total?", "completion": "SELECT count(*) FROM College"}
{"prompt": "How many bands are there?", "completion": "SELECT count(*) FROM Band"}
{"prompt": "What is the average latitude and longitude of stations located in San Jose city?", "completion": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\""}
{"prompt": "Count the number of different last names actors have.", "completion": "SELECT count(DISTINCT last_name) FROM actor"}
{"prompt": "What are the names of all colleges with a larger enrollment than the largest college in Florida?", "completion": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')"}
{"prompt": "Find names of all students who took some course and the course description.", "completion": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code"}
{"prompt": "Find the names of students who have taken any course in the fall semester of year 2003.", "completion": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)"}
{"prompt": "Give the number of Jetblue Airways flights.", "completion": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\""}
{"prompt": "Count the number of templates.", "completion": "SELECT count(*) FROM Templates"}
{"prompt": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.", "completion": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id"}
{"prompt": "Show the flight number and distance of the flight with maximum price.", "completion": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1"}
{"prompt": "How many sections does each course has?", "completion": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code"}
{"prompt": "Find the busiest destination airport that runs most number of routes in China.", "completion": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What are the titles of courses without prerequisites?", "completion": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"}
{"prompt": "What is all the information about all people?", "completion": "SELECT * FROM people"}
{"prompt": "What is ids of the songs whose resolution is higher than the resolution of any songs with rating lower than 8?", "completion": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)"}
{"prompt": "How many times the number of adults and kids staying in a room reached the maximum capacity of the room?", "completion": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;"}
{"prompt": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check'", "completion": "SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Check'"}
{"prompt": "How many colors are never used by any product?", "completion": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )"}
{"prompt": "Count the number of students who did not enroll in any course.", "completion": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)"}
{"prompt": "Find the number of different products that are produced by companies at different headquarter cities.", "completion": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter"}
{"prompt": "How many allergies are there?", "completion": "SELECT count(DISTINCT allergy) FROM Allergy_type"}
{"prompt": "How many distinct artists do the volumes associate to?", "completion": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"}
{"prompt": "List the name and tonnage ordered by in descending alphaetical order for the names.", "completion": "SELECT name ,  tonnage FROM ship ORDER BY name DESC"}
{"prompt": "Find the first name and age of students who are living in the dorms that do not have amenity TV Lounge.", "completion": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')"}
{"prompt": "What are the id and name of the stations that have ever had more than 12 bikes available?", "completion": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12"}
{"prompt": "How many different users wrote some reviews?", "completion": "SELECT count(DISTINCT u_id) FROM review"}
{"prompt": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?", "completion": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;"}
{"prompt": "Which employee manage most number of peoples? List employee's first and last name, and number of people report to that employee.", "completion": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;"}
{"prompt": "Show all locations and the total number of platforms and passengers for all train stations in each location.", "completion": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION"}
{"prompt": "Show different builders of railways, along with the corresponding number of railways using each builder.", "completion": "SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder"}
{"prompt": "Return the average gross sales in dollars across all films.", "completion": "SELECT avg(Gross_in_dollar) FROM film"}
{"prompt": "Which city has most number of arriving flights?", "completion": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"}
{"prompt": "What is the alphabetically ordered list of all the distinct names of nurses?", "completion": "SELECT DISTINCT name FROM nurse ORDER BY name"}
{"prompt": "What is the average salary for each job title?", "completion": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"}
{"prompt": "Show the names of members that have a rank in round higher than 3.", "completion": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID WHERE T2.Rank_in_Round  >  3"}
{"prompt": "Find the number of owners who do not own any dogs at this moment.", "completion": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )"}
{"prompt": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".", "completion": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\""}
{"prompt": "Find the name of bank branch that provided the greatest total amount of loans.", "completion": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1"}
{"prompt": "Show the names of members and the dates of performances they attended in descending order of attendance of the performances.", "completion": "SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC"}
{"prompt": "How many distinct kinds of injuries happened after season 2010?", "completion": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010"}
{"prompt": "What are the job ids for jobs done more than once for a period of more than 300 days?", "completion": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"}
{"prompt": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?", "completion": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'"}
{"prompt": "List the number of people injured by perpetrators in ascending order.", "completion": "SELECT Injured FROM perpetrator ORDER BY Injured ASC"}
{"prompt": "Give the name of the department with the lowest budget.", "completion": "SELECT dept_name FROM department ORDER BY budget LIMIT 1"}
{"prompt": "What is the the phone number of Nancy Edwards?", "completion": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"}
{"prompt": "Give the distinct famous release dates for all artists.", "completion": "SELECT distinct(Famous_Release_date) FROM artist"}
{"prompt": "Return the detail of the location named \"UK Gallery\".", "completion": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""}
